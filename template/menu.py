# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'menu_inicial_3.ui'
#
# Created by: Sérgio Felipe Ribeiro de Melo | Analista CD RJ
#
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from decimal import setcontext
from functools import total_ordering
from multiprocessing.sharedctypes import Value
from tkinter.font import BOLD
from tokenize import Number
import template.files_rc
from sqlite3.dbapi2 import Error
from PyQt5.QtWidgets import (QApplication, QWidget, QPushButton, QLineEdit)
from PyQt5.Qt import Qt
from PyQt5.QtCore import pyqtSlot, right
from PyQt5 import (QtCore, QtGui, QtWidgets)
from PyQt5.QtWidgets import *
from PyQt5.QtGui import QIcon, QPixmap
from PyQt5.QtPrintSupport import *
import os
import sys
from PyQt5.QtWidgets import QDialog, QApplication
from datetime import date, timezone
import time
from datetime import datetime
from template.msgbox import *
# ************************************

from PyQt5 import QtCore, QtGui, QtWidgets
from db.query import sqlite_db


class Ui_MainWindow(object):

    # Criador : Sérgio F.
    # Projeto Controle de Coletor

    def consultar_ativo(self):  # Informação do Banco para puxar os Liberados

        db = sqlite_db("sistema.db")
        lista = db.pega_dados(
            "SELECT COUNT(*) FROM coletores WHERE status ='Ativo'")
        lista = list(lista)
        total = str(format(int(lista[0][0])))
        status = "Liberados"
        self.label_ativo.setText(total + " - " + status)

    def consultar_desativado(self):  # Informação do Banco para puxar os Ocupados

        db = sqlite_db("sistema.db")
        lista = db.pega_dados(
            "SELECT COUNT(*) FROM coletores WHERE status ='Desativado'")
        lista = list(lista)
        total = str(format(int(lista[0][0])))
        status = "Ocupados"
        self.label_desativo.setText(total + " - " + status)

    ################################# Função de Verificar se o coletor está Disponivel ######################

    def verificar_coletor(self, coletor):

        try:
            db = sqlite_db("sistema.db")
            lista = db.pega_dados("SELECT* FROM coletores")

            for row in lista:
                if row[2] == coletor and row[4] == "Ativo":
                    return "Ativo"
                if row[2] == coletor and row[4] == "Desativado":
                    return "Desativado"
                else:
                    continue

            return "Sem permissão"

        except:
            pass

    def verificar_matricula(self, matricula):

        try:
            db = sqlite_db("sistema.db")
            lista = db.pega_dados("SELECT* FROM funcionarios")

            for row in lista:
                if row[2] == matricula and row[5] == "Ativo":
                    return "Ativo"
                if row[2] == matricula and row[5] == "Desativado":
                    return "Desativado"
                else:
                    continue

            return "Sem permissão"

        except:
            pass

    def verificar(self, matricula):

        try:
            db = sqlite_db("sistema.db")
            lista = db.pega_dados("SELECT* FROM lancamento")

            for row in lista:
                if row[2] == matricula and row[10] == "Não":
                    return "Não"
                if row[2] == matricula and row[10] == "Sim":
                    return "Sim"
                else:
                    continue

            return "Sem permissão"

        except:
            pass

################################################ Função - Buscar Coletor e Matricula ##########################################

    def Pesquisar(self):
        db = sqlite_db("sistema.db")
        valor_consulta = ""
        valor_consulta = self.lineEdit_buscar_matricula.text()
        # valor_consulta2 = self.lineEdit_buscar_coletor.text()

        # lista = db.pega_dados(f"SELECT * FROM lancamento where matricula like '%{valor_consulta}%' or matricula like'%{valor_consulta}%'")
        lista2 = db.pega_dados(f"""SELECT L.id ,F.nome,L.matricula,L.coletor,L.dataret,L.horaret,L.datadev,L.horadev,C.serial,F.setor,L.liberado,F.turno
                              FROM funcionarios F
                              JOIN lancamento L ON f.matricula=l.matricula
                              JOIN coletores C ON C.coletor = l.coletor
                              WHERE L.matricula like '%{valor_consulta}%' or L.coletor like'%{valor_consulta}%' or L.liberado like'%{valor_consulta}%'or F.nome like'%{valor_consulta}%'or C.serial like'%{valor_consulta}%'or F.setor like'%{valor_consulta}%'""")
        lista = list(lista2)
        if not lista:
            return QMessageBox.warning(QMessageBox(), "Atenção!!", "Matricula ou Coletor não encontrado!")

        else:
            self.table_banco_lancamento.setRowCount(0)
            # primeiro for trás
            for idxLinha, linha in enumerate(lista2):
                self.table_banco_lancamento.insertRow(idxLinha)
                for idxColuna, coluna in enumerate(linha):
                    self.table_banco_lancamento.setItem(
                        idxLinha, idxColuna, QTableWidgetItem(str(coluna)))


################################################ Funções Retiradas ##########################################

    def retirada_coletor(self):

        try:
            db = sqlite_db("sistema.db")
            st = "Desativado"
            ncol = self.lineEdit_coletor.text()
            matri = self.lineEdit_matricula.text()
            db.inserir_apaga_atualiza(
                f"UPDATE coletores SET status='{st}' WHERE coletor='{ncol}'")
            db.inserir_apaga_atualiza(
                f"UPDATE funcionarios SET status='{st}' WHERE matricula='{matri}'")
            self.carregadados_coletores()

        except:
            QMessageBox.critical(QMessageBox(), "404 - ERROR", "NOT FOUND")

    def add_lancamento_retirada(self):

        db = sqlite_db("sistema.db")

        matri = self.lineEdit_matricula.text()
        col = self.lineEdit_coletor.text()
        dat_ent = date.today()
        hora_ent = time.strftime('%H:%M:%S')
        nom = self.label_nome.text()
        lib = "Não"
        # carregar_dados = db.pega_dados("SELECT* FROM lancamento INNER JOIN funcionario ON  ")
        msg = QMessageBox()
        msg.setWindowTitle("Atenção")
        msg.setInformativeText("\n\n Caro colaborador"" "+str(nom)+"," +
                               " \n\n\n""Possivelmente o coletor ou o colaborador já estão ATIVOS !!!"" \n\n\n""Favor entrar em contato com seu líder!!!\n\n")
        msg.setStyleSheet(Qmesnagem)

        try:
            if matri == "" or col == "":
                QMessageBox.information(QMessageBox(
                ), "Atenção!", "Favor preencher todos os campos para efetuar a Retirada")
            else:
                if self.verificar_coletor(col) == 'Ativo' and self.verificar_matricula(matri) == 'Ativo':
                    db.inserir_apaga_atualiza("INSERT INTO lancamento (matricula,coletor,dataret,horaret,liberado) VALUES ('{}','{}','{}','{}','{}')".format(
                        matri, col, dat_ent, hora_ent, lib))
                    QMessageBox.information(QMessageBox(), "Concluído!", "RETIRADA do coletor de n°" " " + str(col) + " " "efetuada com sucesso!!! \n\n"
                                            "Favor devolver no final do expediente,estamos de olho... \n\nColaborador(a), \n\n"
                                            + str(nom))
                    self.retirada_coletor()
                    self.carregadados_coletores()
                    self.carregadados_colaboradores()
                    self.lineEdit_matricula.setText("")
                    self.lineEdit_coletor.setText("")
                    self.label_nome.setText("")
                    self.label_ncoletor.setText("")
                    self.lineEdit_matricula.setFocus()
                    self.consultar_ativo()
                    self.consultar_desativado()
                    self.Pesquisar()

                else:
                    msg.exec_()
                    # QMessageBox.critical(QMessageBox(),"ATENÇÃO!","Caro colaborador"" "+str(nom)+" \n\n""Possivelmente o Coletor ou o Colaborador já está ATIVO !!!"" \n\n""Favor entrar em contato com seu líder!!!")
                    self.lineEdit_matricula.setText("")
                    self.lineEdit_coletor.setText("")
                    self.label_nome.setText("")
                    self.label_ncoletor.setText("")
                    self.lineEdit_matricula.setFocus()

        except Error:
            QMessageBox.warning(QMessageBox(), "ATENÇÃO!",
                                "ERROR 404 - Ao conectar no banco !!!")

 ############################################# Funções Devoluções ###############################################

    def devolucao_coletor(self, status, coletor):

        try:
            db = sqlite_db("sistema.db")
            st = "Ativo"
            ncol = self.lineEdit_coletor.text()
            db.inserir_apaga_atualiza(
                f"UPDATE coletores SET status='{status}' WHERE coletor='{coletor}'")
            self.carregadados_coletores()

        except:
            QMessageBox.warning(QMessageBox(), "404 - ERROR", "NOT FOUND")

    def devolucao_funcionario(self, status, matricula):

        try:
            db = sqlite_db("sistema.db")
            st = "Ativo"
            matri = self.lineEdit_matricula.text()
            db.inserir_apaga_atualiza(
                f"UPDATE funcionarios SET status='{status}' WHERE matricula='{matricula}'")
            self.carregadados_colaboradores()

        except:
            QMessageBox.warning(QMessageBox(), "404 - ERROR", "NOT FOUND")

    def add_lancamento_devolucao(self):

        db = sqlite_db("sistema.db")
        matri = self.lineEdit_matricula.text()
        col = self.lineEdit_coletor.text()
        dat_said = date.today()
        hora_said = time.strftime('%H:%M:%S')
        nom = self.label_nome.text()
        lib = "Sim"
        sta = "Não"
        msg = QMessageBox()
        msg.setWindowTitle("Atenção")
        msg.setInformativeText("Caro colaborador"" "+str(nom)+","+" \n\n""Devolução do coletor de numero" " "+str(
            col)+" " "Não Efetuada!!! \n\n \n""Favor entrar em contato com seu líder(a),\n\n \n""Provavelmente está com algum colaborador ou ainda não foi efetuada a opção de 'RETIRADA!'\n\n")
        msg.setStyleSheet(Qmesnagem)
        try:
            if matri == "" or col == "":
                QMessageBox.information(QMessageBox(
                ), "Atenção!", "Favor preencher todos os campos para efetuar a Devolução")

            resultado = db.inserir_apaga_atualiza(
                f"UPDATE lancamento SET datadev='{dat_said}',horadev='{hora_said}',liberado='{lib}' WHERE matricula ='{matri}' AND coletor ='{col}' AND liberado ='{sta}'")
            verificar = self.verificar(matri)

            if self.verificar_coletor(col) == 'Desativado' and self.verificar_matricula(matri) == 'Desativado':

                try:
                    resultado
                    QMessageBox.information(QMessageBox(), "Concluído!", "DEVOLUÇÃO do coletor de n°" " " + str(col) + " " "efetuada com sucesso!!! \n\n"
                                            "Obrigado... \n\nColaborador(a), \n\n"
                                            + str(nom))
                    self.devolucao_coletor("Ativo", col)
                    self.devolucao_funcionario("Ativo", matri)
                    self.carregadados_colaboradores()
                    self.carregadados_coletores()
                    self.lineEdit_matricula.setText("")
                    self.lineEdit_coletor.setText("")
                    self.label_nome.setText("")
                    self.label_ncoletor.setText("")
                    self.lineEdit_matricula.setFocus()
                    self.consultar_ativo()
                    self.consultar_desativado()
                    self.Pesquisar()
            # else:
                except Error:
                    # if not resultado:
                    QMessageBox.critical(
                        QMessageBox(), "1° Atenção!", "ERROR" " "+str(col)+" " "Não Efetuada!!! \n\n !!")

            else:
                msg.exec_()
                #   QMessageBox.critical(QMessageBox(),"ATENÇÃO!","Devolução do Coletor de numero" " "+str(col)+" " " Não Efetuada!!! \n\n Provavelmente está com algum colaborador \n\n ou não foi realizada a 'Retirada!!'")
                self.lineEdit_matricula.setText("")
                self.lineEdit_coletor.setText("")
                self.label_nome.setText("")
                self.label_ncoletor.setText("")
                self.lineEdit_matricula.setFocus()

        except Error:
            QMessageBox.warning(QMessageBox(), "ATENÇÃO!",
                                "ERROR 404 - Ao conectar no banco !!!")


##################################### Tabela de Lançamentos - NÃO FUNCIONA #############################################

    # def carregadados_lancamentos(self):

        # db = sqlite_db("sistema.db")
   # lista = db.pega_dados("SELECT* FROM lancamento")

        # self.table_banco_lancamento.setRowCount(0)
   # for linha1, dados1 in enumerate(lista):
        #    self.table_banco_lancamento.insertRow(linha1)
     #   for coluna_o, dados1 in enumerate(dados1):
            #       self.table_banco_lancamento.setItem(linha1,coluna_o,QTableWidgetItem(str(dados1)))


######################################## JOIN - Tabela de Lancamentos #######################

    def procv_tabela(self):

        db = sqlite_db("sistema.db")
        lista = db.pega_dados("""SELECT L.id ,F.nome,L.matricula,L.coletor,L.dataret,L.horaret,L.horadev,L.datadev,C.serial,F.setor,L.liberado,F.turno 
                              FROM funcionarios F 
                              JOIN lancamento L ON f.matricula=l.matricula
                              JOIN coletores C ON C.coletor = l.coletor
                              """)

        self.table_banco_lancamento.setRowCount(0)
        for linha1, dados1 in enumerate(lista):
            self.table_banco_lancamento.insertRow(linha1)
            for coluna_o, dados1 in enumerate(dados1):
                self.table_banco_lancamento.setItem(
                    linha1, coluna_o, QTableWidgetItem(str(dados1)))


# Pegar ID da Tabela Lançamentos


    def pegauserid_lancamento(self):
        value = self.table_banco_lancamento.item(
            self.pegaselecaoid_lancamento(), 0)
        return value.text() if not value is None else value

    # mostra na tela o que sendo selecionado
    def mostraselecao_lancamento(self):
        self.pegauserid_lancamento()

    def pegaselecaoid_lancamento(self):  # pega o id da selecao banco
        return self.table_banco_lancamento.currentRow()

    def deletar_lancamento(self):

        try:
            db = sqlite_db("sistema.db")
            id = self.pegauserid_lancamento()
            db.inserir_apaga_atualiza(
                "DELETE FROM lancamento WHERE id='{}'".format(id))
            QMessageBox.information(
                QMessageBox(), "Campo", "Apagado com sucesso!")
            # self.carregadados_lancamentos()
            self.procv_tabela()
        except:
            QMessageBox.information(
                QMessageBox(), "Error!", "Não foi possivel apagar os dados com sucesso!")


# ************************************************************** PAGINA INICIAL ************************************

    def buscar_matricula_inicio(self):  # Buscar matricula

        db = sqlite_db("sistema.db")
        valor_consulta = ""
        valor_consulta = self.lineEdit_matricula.text()

        lista = db.pega_dados(
            f"SELECT * FROM funcionarios WHERE matricula like'{valor_consulta}'")
        lista = list(lista)

        if not lista:

            QMessageBox.warning(QMessageBox(), "ATENÇÃO!", "COLABORADOR NÃO CADASTRADO!!!\n"
                                "Favor entrar em contato com seu líder")

            self.lineEdit_matricula.setText("")
            self.label_nome.setText("Colaborador não Cadastrado")

        else:
            for row in lista:
                self.label_nome.setText(row[1])
                self.lineEdit_coletor.setFocus()

    def buscar_coletor_inicio(self):  # Buscar Coletor

        db = sqlite_db("sistema.db")
        valor_consulta = ""
        valor_consulta = self.lineEdit_coletor.text()

        lista = db.pega_dados(
            f"SELECT * FROM coletores WHERE coletor like'{valor_consulta}'")
        lista = list(lista)

        if not lista:
            QMessageBox.warning(QMessageBox(), "ATENÇÃO!", "COLETOR NÃO CADASTRADO!!!\n"
                                "Favor entrar em contato com seu líder")
            self.lineEdit_coletor.setText("")
            self.label_ncoletor.setText("Coletor não Cadastrado")

        else:
            for row in lista:
                self.label_ncoletor.setText(row[1])


# ************************************************************** COLABORADORES ************************************


# ****************************** Função - ADICIONAR COLABORADOR - TABELA DE COLABORADORES


    def add(self):  # Adicionar Colaborador

        db = sqlite_db("sistema.db")

        name = self.lineEdit_nome_colaborador.text()
        matri = self.lineEdit_matricula_colaborador.text()
        lid = self.cbox_setor_colaborador.currentText()
        tur = self.cbox_turno_colaborador.currentText()
        sta = self.cbox_permissao.currentText()
        # adm = 1

        try:
            if name == "" or matri == "":
                QMessageBox.information(QMessageBox(
                ), "Atenção!", "Favor preencher todos os campos para efetuar o cadastro do colaborador!")
            else:
                db.inserir_apaga_atualiza(
                    "INSERT INTO funcionarios (nome,matricula,setor,turno,status) VALUES ('{}', '{}', '{}','{}','{}')".format(name, matri, lid, tur, sta))
                QMessageBox.information(
                    QMessageBox(), "Concluído!", "Dados gravados com sucesso")

                # Botão de Limpeza depois de cadastrar

                self.lineEdit_nome_colaborador.setText("")
                self.lineEdit_matricula_colaborador.setText("")
                self.carregadados_colaboradores()

        except Error:
            QMessageBox.warning(QMessageBox(), "Atenção!",
                                "Matricula já cadastrada no banco de dados!!!")

# ****************************** Função - DELETAR COLABORADOR - TABELA DE COLABORADORES

    def pegauserid_colaborador(self):  # pega o id da tabela
        value = self.table_colaboradores.item(
            self.pegaselecaoid_colaborador(), 0)
        return value.text() if not value is None else value

    # mostra na tela o que sendo selecionado
    def mostraselecao_colaborador(self):
        self.pegauserid_colaborador()

    def pegaselecaoid_colaborador(self):  # pega o id da selecao banco
        return self.table_colaboradores.currentRow()

    def deletar_colaborador(self):

        try:
            db = sqlite_db("sistema.db")
            id = self.pegauserid_colaborador()
            db.inserir_apaga_atualiza(
                "DELETE FROM funcionarios WHERE id='{}'".format(id))
            QMessageBox.information(
                QMessageBox(), "ID!", "Apagado com sucesso!")
            self.carregadados_colaboradores()
        except:
            QMessageBox.information(
                QMessageBox(), "Error!", "Não foi possivel apagar os dados com sucesso!")


# ****************************** Função - CARREGAR DADOS - TABELA DE COLABORADORES

    def carregadados_colaboradores(self):  # Colaborador Carrega Dados
        db = sqlite_db("sistema.db")
        lista = db.pega_dados("SELECT * FROM funcionarios")

        self.table_colaboradores.setRowCount(0)
        for linha, dados in enumerate(lista):
            self.table_colaboradores.insertRow(linha)
            for coluna_n, dados in enumerate(dados):
                self.table_colaboradores.setItem(
                    linha, coluna_n, QTableWidgetItem(str(dados)))

 # ****************************** Função - Editar Dados - TABELA DE COLABORADORES

    def preencher_colaboradores(self):
        IdLinhaSelecionada = self.pegaselecaoid_colaborador()

        if self.table_colaboradores.item(IdLinhaSelecionada, 1) != None:
            name = self.table_colaboradores.item(IdLinhaSelecionada, 1).text()
            self.lineEdit_nome_colaborador.setText(name)

        if self.table_colaboradores.item(IdLinhaSelecionada, 2) != None:
            matri = self.table_colaboradores.item(IdLinhaSelecionada, 2).text()
            self.lineEdit_matricula_colaborador.setText(matri)

 # ****************************** Função - Editar Dados - TABELA DE COLABORADORES

    def atualizar_colaboradores(self):

        try:
            db = sqlite_db("sistema.db")
            Id = self.pegauserid_colaborador()
            name = self.lineEdit_nome_colaborador.text()
            matri = self.lineEdit_matricula_colaborador.text()
            lid = self.cbox_setor_colaborador.currentText()
            tur = self.cbox_turno_colaborador.currentText()
            sta = self.cbox_permissao.currentText()
            db.inserir_apaga_atualiza(
                f"UPDATE funcionarios SET nome='{name}',matricula='{matri}',setor='{lid}',turno='{tur}',status='{sta}' WHERE id={Id}")
            QMessageBox.warning(QMessageBox(), "Atualizado",
                                "Cadastro Atualizado com sucesso!")
            self.carregadados_colaboradores()
            self.lineEdit_nome_colaborador.setText("")
            self.lineEdit_matricula_colaborador.setText("")
        except:
            QMessageBox.warning(QMessageBox(), "404 - ERROR",
                                "Não foi possivel efetuar a atualização!")


# ************************************************************** COLETORES ************************************


# # ****************************** Função - ADICIONAR COLETOR - TABELA DE COLETORES

    def add_coletor(self):

        db = sqlite_db("sistema.db")

        ns = self.lineEdit_seriecoletor.text()
        col = self.lineEdit_addcoletor.text()
        mod = self.cbox_modelo.currentText()
        stc = self.cbox_statuscoletor.currentText()
        # adm = 1

        try:
            if ns == "" or col == "":
                QMessageBox.information(QMessageBox(
                ), "Atenção!", "Favor preencher todos os campos para efetuar o cadastro do coletor!")

            else:
                db.inserir_apaga_atualiza(
                    "INSERT INTO coletores (serial,coletor,modelo,status) VALUES ('{}', '{}', '{}','{}')".format(ns, col, mod, stc))
                QMessageBox.information(
                    QMessageBox(), "Concluído!", "Dados gravados com sucesso")
                self.carregadados_coletores()
                # Botão de Limpeza depois de cadastrar o Coletor

            self.lineEdit_seriecoletor.setText("")
            self.lineEdit_addcoletor.setText("")

        except Error:

            QMessageBox.warning(QMessageBox(), "Atenção!",
                                "Campo 'DUPLICADO' no Banco de Dados")
            self.lineEdit_seriecoletor.setText("")
            self.lineEdit_addcoletor.setText("")


# ************************************************************************************************NÃO FUNCIONA - NÃO FUNCIONA - CARREGA DE COLETORES ****************************

    def carregadados_coletores(self):  # Carregar Tabela de Coletores

        db = sqlite_db("sistema.db")
        lista = db.pega_dados("SELECT* FROM coletores")

        self.table_coletor.setRowCount(0)
        for linha1, dados1 in enumerate(lista):
            self.table_coletor.insertRow(linha1)
            for coluna_o, dados1 in enumerate(dados1):
                self.table_coletor.setItem(
                    linha1, coluna_o, QTableWidgetItem(str(dados1)))


# ****************************** Função - DELETAR DADOS - TABELA DE COLETORES

    def pegauserid_coletor(self):  # Pega o id coletor da tabela
        value = self.table_coletor.item(self.pegaselecaoid_coletor(), 0)
        return value.text() if not value is None else value

    # Mostra na tela o que sendo selecionado coletor
    def mostraselecao_coletor(self):
        self.pegauserid_coletor()

    def pegaselecaoid_coletor(self):  # Pega o id do coletor da selecao
        return self.table_coletor.currentRow()

    def deletar_coletor(self):

        try:
            db = sqlite_db("sistema.db")
            id = self.pegauserid_coletor()
            db.inserir_apaga_atualiza(
                "DELETE FROM coletores WHERE id='{}'".format(id))
            QMessageBox.information(
                QMessageBox(), "ID Coletor!", "Apagado com sucesso!")
            self.carregadados_coletores()
        except:
            QMessageBox.information(
                QMessageBox(), "Error!", "Não foi possivel apagar os dados com sucesso!")

    def preencher_coletores(self):  # Preencher os campos quando selecionado.

        IdLinhaSelecionadacol = self.pegaselecaoid_coletor()

        if self.table_coletor.item(IdLinhaSelecionadacol, 1) != None:
            ns = self.table_coletor.item(IdLinhaSelecionadacol, 1).text()
            self.lineEdit_seriecoletor.setText(ns)

        if self.table_coletor.item(IdLinhaSelecionadacol, 2) != None:
            col = self.table_coletor.item(IdLinhaSelecionadacol, 2).text()
            self.lineEdit_addcoletor.setText(col)

    def atualizar_coletores(self):  # Editar / Atualizar campos no Banco de Dados

        try:
            db = sqlite_db("sistema.db")
            Id = self.pegauserid_coletor()
            ns = self.lineEdit_seriecoletor.text()
            col = self.lineEdit_addcoletor.text()
            mod = self.cbox_modelo.currentText()
            stc = self.cbox_statuscoletor.currentText()
            db.inserir_apaga_atualiza(
                f"UPDATE coletores SET serial='{ns}',coletor='{col}',modelo='{mod}',status='{stc}' WHERE id={Id}")
            QMessageBox.warning(QMessageBox(), "Atualizado",
                                "Coletor Atualizado com sucesso!")
            self.carregadados_coletores()
            ns = self.lineEdit_seriecoletor.setText("")
            col = self.lineEdit_addcoletor.setText("")
        except:
            QMessageBox.warning(QMessageBox(), "404 - ERROR",
                                "Não foi possivel efetuar a atualização!")


# *******************************************************************************************************


    def setupUi(self, MainWindow):

        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1000, 573)
        MainWindow.setMinimumSize(QtCore.QSize(1000, 500))
        MainWindow.setStyleSheet("background-color: rgb(45, 45, 45);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)

        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.Top_Bar = QtWidgets.QFrame(self.centralwidget)
        self.Top_Bar.setMaximumSize(QtCore.QSize(16777215, 40))
        self.Top_Bar.setStyleSheet("background-color: rgb(35, 35, 35);")
        self.Top_Bar.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.Top_Bar.setFrameShadow(QtWidgets.QFrame.Raised)
        self.Top_Bar.setObjectName("Top_Bar")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.Top_Bar)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.frame_toggle = QtWidgets.QFrame(self.Top_Bar)
        self.frame_toggle.setMaximumSize(QtCore.QSize(70, 40))
        self.frame_toggle.setStyleSheet("backuground-color:rgb(0,0,0);")
        self.frame_toggle.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_toggle.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_toggle.setObjectName("frame_toggle")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.frame_toggle)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setSpacing(0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.Btn_Toggle = QtWidgets.QPushButton(self.frame_toggle)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.Btn_Toggle.sizePolicy().hasHeightForWidth())
        self.Btn_Toggle.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Fira Code")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.Btn_Toggle.setFont(font)
        self.Btn_Toggle.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Btn_Toggle.setStyleSheet("    color: rgb(148, 0, 211);\n"
                                      "    background-color: rgb(10, 10, 10);\n"
                                      "    border: 0px solid rgb(0,0,0);\n"
                                      "\n"
                                      "")

        self.Btn_Toggle.setObjectName("Btn_Toggle")
        self.verticalLayout_2.addWidget(self.Btn_Toggle)
        self.horizontalLayout.addWidget(self.frame_toggle)
        self.frame_top = QtWidgets.QFrame(self.Top_Bar)
        self.frame_top.setStyleSheet("background-color: rgb(10,10,10)")
        self.frame_top.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_top.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_top.setObjectName("frame_top")
        self.label_credits = QtWidgets.QLabel(self.frame_top)
        self.label_credits.setGeometry(QtCore.QRect(10, 10, 921, 21))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setBold(True)
        font.setWeight(75)
        self.label_credits.setFont(font)
        self.label_credits.setStyleSheet("color: rgb(155, 155, 155);\n"
                                         "background-color: NONE;")
        self.label_credits.setObjectName("label_credits")
        self.horizontalLayout.addWidget(self.frame_top)
        self.verticalLayout.addWidget(self.Top_Bar)
        self.Content = QtWidgets.QFrame(self.centralwidget)
        self.Content.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.Content.setFrameShadow(QtWidgets.QFrame.Raised)
        self.Content.setObjectName("Content")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.Content)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setSpacing(0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.frame_left_menu = QtWidgets.QFrame(self.Content)
        self.frame_left_menu.setMinimumSize(QtCore.QSize(70, 0))
        self.frame_left_menu.setMaximumSize(QtCore.QSize(70, 16777215))
        self.frame_left_menu.setStyleSheet(
            "background-color: rgb(10, 10, 10);")
        self.frame_left_menu.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_left_menu.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_left_menu.setObjectName("frame_left_menu")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.frame_left_menu)
        self.verticalLayout_3.setContentsMargins(0, 2, 0, 0)
        self.verticalLayout_3.setSpacing(6)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.frame_top_menus = QtWidgets.QFrame(self.frame_left_menu)
        self.frame_top_menus.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frame_top_menus.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_top_menus.setObjectName("frame_top_menus")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.frame_top_menus)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setSpacing(0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.btn_page_1 = QtWidgets.QPushButton(self.frame_top_menus)
        self.btn_page_1.setMinimumSize(QtCore.QSize(0, 40))
        self.btn_page_1.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.btn_page_1.setStyleSheet("QPushButton {\n"
                                      "    color: rgb(165, 165, 165);\n"
                                      "    background-color: rgb(10, 10, 10);\n"
                                      "    border: 0px solid;\n"
                                      "}\n"
                                      "QPushButton:hover {\n"
                                      "    background-color: rgb(148, 0, 211);\n"
                                      "color: rgb(255, 255, 255);\n"
                                      "\n"
                                      "\n"
                                      "}")
        self.btn_page_1.setObjectName("btn_page_1")
        self.verticalLayout_4.addWidget(self.btn_page_1)
        self.btn_page_2 = QtWidgets.QPushButton(self.frame_top_menus)
        self.btn_page_2.setMinimumSize(QtCore.QSize(0, 40))
        self.btn_page_2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.btn_page_2.setStyleSheet("QPushButton {\n"
                                      "    color: rgb(165, 165, 165);\n"
                                      "    background-color: rgb(10, 10, 10);\n"
                                      "    border: 0px solid;\n"
                                      "}\n"
                                      "QPushButton:hover {\n"
                                      "    background-color: rgb(148, 0, 211);\n"
                                      "color: rgb(255, 255, 255);\n"
                                      "\n"
                                      "\n"
                                      "}")
        self.btn_page_2.setObjectName("btn_page_2")
        self.verticalLayout_4.addWidget(self.btn_page_2)
        self.btn_page_3 = QtWidgets.QPushButton(self.frame_top_menus)
        self.btn_page_3.setMinimumSize(QtCore.QSize(0, 40))
        self.btn_page_3.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.btn_page_3.setStyleSheet("QPushButton {\n"
                                      "    color: rgb(165, 165, 165);\n"
                                      "    background-color: rgb(10, 10, 10);\n"
                                      "    border: 0px solid;\n"
                                      "}\n"
                                      "QPushButton:hover {\n"
                                      "    background-color: rgb(148, 0, 211);\n"
                                      "color: rgb(255, 255, 255);\n"
                                      "\n"
                                      "\n"
                                      "}")
        self.btn_page_3.setObjectName("btn_page_3")
        self.verticalLayout_4.addWidget(self.btn_page_3)
        self.btn_page_4 = QtWidgets.QPushButton(self.frame_top_menus)
        self.btn_page_4.setMinimumSize(QtCore.QSize(0, 40))
        self.btn_page_4.setSizeIncrement(QtCore.QSize(0, 0))
        self.btn_page_4.setBaseSize(QtCore.QSize(0, 0))
        self.btn_page_4.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.btn_page_4.setStyleSheet("QPushButton {\n"
                                      "    color: rgb(165, 165, 165);\n"
                                      "    background-color: rgb(10, 10, 10);\n"
                                      "    border: 0px solid;\n"
                                      "}\n"
                                      "QPushButton:hover {\n"
                                      "    background-color: rgb(148, 0, 211);\n"
                                      "color: rgb(255, 255, 255);\n"
                                      "\n"
                                      "\n"
                                      "}")

        # ********************************** Páginas **********************************
        # if user.lower() == 'user':
        # self.btn_page_1.setVisible(False)

        self.btn_page_1.clicked.connect(
            lambda: self.stackedWidget.setCurrentWidget(self.page_1))  # Home
        self.btn_page_2.clicked.connect(
            lambda: self.stackedWidget.setCurrentWidget(self.page_3))  # Pesquisar
        self.btn_page_3.clicked.connect(
            lambda: self.stackedWidget.setCurrentWidget(self.page_2))  # Colaborador
        self.btn_page_4.clicked.connect(
            lambda: self.stackedWidget.setCurrentWidget(self.page_4))  # Coletor

        # ********************************** Páginas **********************************

        self.btn_page_4.setObjectName("btn_page_4")
        self.verticalLayout_4.addWidget(self.btn_page_4)
        self.verticalLayout_3.addWidget(
            self.frame_top_menus, 0, QtCore.Qt.AlignTop)
        self.horizontalLayout_2.addWidget(self.frame_left_menu)
        self.frame_pages = QtWidgets.QFrame(self.Content)
        self.frame_pages.setStyleSheet("background-color: rgb(41,43, 48);")
        self.frame_pages.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_pages.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_pages.setObjectName("frame_pages")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.frame_pages)
        self.verticalLayout_5.setContentsMargins(-1, -1, -1, 0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.stackedWidget = QtWidgets.QStackedWidget(self.frame_pages)
        self.stackedWidget.setObjectName("stackedWidget")
        self.page_1 = QtWidgets.QWidget()
        self.page_1.setObjectName("page_1")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.page_1)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        spacerItem = QtWidgets.QSpacerItem(
            20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_10.addItem(spacerItem)
        self.label_6 = QtWidgets.QLabel(self.page_1)
        self.label_6.setStyleSheet("color:  rgb(105, 105, 105);")
        self.label_6.setObjectName("label_6")
        self.verticalLayout_10.addWidget(self.label_6)
        spacerItem1 = QtWidgets.QSpacerItem(
            20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_10.addItem(spacerItem1)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setContentsMargins(10, -1, 10, -1)
        self.horizontalLayout_7.setSpacing(20)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.lineEdit_matricula = QtWidgets.QLineEdit(self.page_1)
        self.lineEdit_matricula.setEnabled(True)
        self.lineEdit_matricula.setStyleSheet("QLineEdit {\n"
                                              "    \n"
                                              "    font: 75 20pt \"Segoe UI\";\n"
                                              "    border: 2px solid rgb(55, 55,55);\n"
                                              "    border-radius: 5px;\n"
                                              "    padding: 15px;\n"
                                              "    background-color: rgb(30, 30, 30);    \n"
                                              "    color: rgb(100, 100, 100);\n"
                                              "}\n"
                                              "QLineEdit:hover {\n"
                                              "    border: 2px solid rgb(55, 55, 55);\n"
                                              "}\n"
                                              "QLineEdit:focus {\n"
                                              "    border: 2px solid rgb(148, 0, 211);    \n"
                                              "    color: rgb(148, 0, 211);\n"
                                              "}\n"
                                              "")
        self.lineEdit_matricula.setText("")
        self.lineEdit_matricula.setMaxLength(8)
        self.lineEdit_matricula.setCursorPosition(0)
        self.lineEdit_matricula.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_matricula.setObjectName("lineEdit_matricula")
        self.horizontalLayout_7.addWidget(self.lineEdit_matricula)
        self.lineEdit_coletor = QtWidgets.QLineEdit(self.page_1)
        self.lineEdit_coletor.setStyleSheet("QLineEdit {\n"
                                            "    \n"
                                            "    font: 75 20pt \"Segoe UI\";\n"
                                            "    border: 2px solid rgb(55, 55,55);\n"
                                            "    border-radius: 5px;\n"
                                            "    padding: 15px;\n"
                                            "    background-color: rgb(30, 30, 30);    \n"
                                            "    color: rgb(100, 100, 100);\n"
                                            "}\n"
                                            "QLineEdit:hover {\n"
                                            "    border: 2px solid rgb(55, 55, 55);\n"
                                            "}\n"
                                            "QLineEdit:focus {\n"
                                            "    border: 2px solid rgb(148, 0, 211);    \n"
                                            "    color: rgb(148, 0, 211);\n"
                                            "}\n"
                                            "")
        self.lineEdit_coletor.setText("")
        self.lineEdit_coletor.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_coletor.setMaxLength(4)
        self.lineEdit_coletor.setObjectName("lineEdit_coletor")
        self.horizontalLayout_7.addWidget(self.lineEdit_coletor)
        self.verticalLayout_10.addLayout(self.horizontalLayout_7)
        self.verticalLayout_11 = QtWidgets.QVBoxLayout()
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.verticalLayout_10.addLayout(self.verticalLayout_11)
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setContentsMargins(10, 5, 5, 10)
        self.horizontalLayout_8.setSpacing(20)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.label_7 = QtWidgets.QLabel(self.page_1)
        self.label_7.setStyleSheet("color: rgb(100, 100, 100);")
        self.label_7.setAlignment(
            QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.label_7.setIndent(-1)
        self.label_7.setObjectName("label_7")
        self.horizontalLayout_8.addWidget(self.label_7)
        self.label_8 = QtWidgets.QLabel(self.page_1)
        self.label_8.setStyleSheet("color: rgb(100, 100, 100);")
        self.label_8.setObjectName("label_8")
        self.horizontalLayout_8.addWidget(self.label_8)
        self.verticalLayout_10.addLayout(self.horizontalLayout_8)
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_10.setContentsMargins(10, -1, 10, -1)
        self.horizontalLayout_10.setSpacing(20)
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.label_nome = QtWidgets.QLabel(self.page_1)
        self.label_nome.setStyleSheet("font: 85 16pt \"Segoe UI\";\n"
                                      "    border: 2px solid rgb(155, 155, 155);\n"
                                      "    border-radius: 5px;\n"
                                      "    padding: 15px;\n"
                                      "    background-color: rgb(80, 80, 80);    \n"
                                      "    color: rgb(250, 250, 250);")
        self.label_nome.setObjectName("label_nome")
        self.label_nome.setAlignment(QtCore.Qt.AlignCenter)
        self.horizontalLayout_10.addWidget(self.label_nome)
        self.label_ncoletor = QtWidgets.QLabel(self.page_1)
        self.label_ncoletor.setStyleSheet("font: 85 16pt \"Segoe UI\";\n"
                                          "    border: 2px solid rgb(155, 155,155);\n"
                                          "    border-radius: 5px;\n"
                                          "    padding: 15px;\n"
                                          "    background-color: rgb(80, 80, 80);    \n"
                                          "    color: rgb(250, 250, 250);")
        self.label_ncoletor.setObjectName("label_ncoletor")
        self.label_ncoletor.setAlignment(QtCore.Qt.AlignCenter)
        self.horizontalLayout_10.addWidget(self.label_ncoletor)
        self.verticalLayout_10.addLayout(self.horizontalLayout_10)
        self._2 = QtWidgets.QHBoxLayout()
        self._2.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self._2.setContentsMargins(60, 60, 60, 60)
        self._2.setSpacing(164)
        self._2.setObjectName("_2")
        self.btn_entrada = QtWidgets.QPushButton(self.page_1)
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.btn_entrada.setFont(font)
        self.btn_entrada.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.btn_entrada.setStyleSheet("QPushButton {    \n"
                                       "    background-color:rgb(85, 255, 127);\n"
                                       "    border: 2px solid rgb(60, 60, 60);\n"
                                       "    border-radius: 5px;\n"
                                       "    padding: 2em;\n"
                                       "}\n"
                                       "QPushButton:hover {    \n"
                                       "    background-color:rgb(95, 255, 137);\n"
                                       "    border: 2px solid rgb(70, 70, 70);\n"
                                       "}\n"
                                       "QPushButton:pressed {    \n"
                                       "    background-color:rgb(105, 255, 147);\n"
                                       "    border: 2px solid rgb(85, 255, 127);    \n"
                                       "    color: rgb(255, 255, 255);\n"
                                       "    \n"
                                       "}")
        self.btn_entrada.setIconSize(QtCore.QSize(60, 60))
        self.btn_entrada.setAutoRepeatDelay(300)
        self.btn_entrada.setAutoRepeatInterval(300)
        self.btn_entrada.setObjectName("btn_entrada")
        self._2.addWidget(self.btn_entrada)
        self.btn_saida = QtWidgets.QPushButton(self.page_1)
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.btn_saida.setFont(font)
        self.btn_saida.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.btn_saida.setStyleSheet("QPushButton {    \n"
                                     "    background-color: rgb(255, 85, 127);\n"
                                     "    border: 2px solid rgb(60, 60, 60);\n"
                                     "    border-radius: 5px;\n"
                                     "    padding: 2em;\n"
                                     "}\n"
                                     "QPushButton:hover {    \n"
                                     "    background-color: rgb(255, 95, 137);\n"
                                     "    border: 2px solid rgb(70, 70, 70);\n"
                                     "}\n"
                                     "QPushButton:pressed {    \n"
                                     "    background-color: rgb(255, 85, 127);\n"
                                     "    border: 2px solid rgb(255, 85, 127);    \n"
                                     "    color: rgb(255, 255, 255);\n"
                                     "    \n"
                                     "}")
        self.btn_saida.setIconSize(QtCore.QSize(60, 60))
        self.btn_saida.setAutoRepeatInterval(300)
        self.btn_saida.setObjectName("btn_saida")
        self._2.addWidget(self.btn_saida)

        ##### Atualizando Data : 22/06/2022 #######
        # - Ultima Atualização : 19/11/2021
        ##### Colocando Label Contagem dos coletores #####

        # Ativos - Coletor - Parte Verde

        self.label_ativo = QtWidgets.QLabel(self.page_1)
        self.label_ativo.setStyleSheet("font: 95 15pt bold\"Segoe UI\";\n"
                                       "    border: 1px solid rgb(80, 80, 80);\n"
                                       "    border-radius: 5px;\n"
                                       "    padding: 10px;\n"
                                       "    background-color: rgb(209, 245, 222);    \n"
                                       "    color: rgb(29, 28, 32);")
        self.label_ativo.setObjectName("label_ativo")
        self.label_ativo.setAlignment(QtCore.Qt.AlignCenter)
        self.label_ativo.move(70, 480)
        self.label_ativo.resize(480, 50)  # Tamanho do Label

        # Numeros de coletores disponiveis #22/06/2022

        # Desativados - Coletor - Parte Vermelha

        self.label_desativo = QtWidgets.QLabel(self.page_1)
        self.label_desativo.setStyleSheet("font: 95 15pt bold\"Segoe UI\";\n"
                                          "    border: 1px solid rgb(80, 80, 80);\n"
                                          "    border-radius: 5px;\n"
                                          "    padding: 10px;\n"
                                          "    background-color: rgb(255,171, 200);    \n"
                                          "    color: rgb(29, 28, 32);")
        self.label_desativo.setObjectName("label_desativo")
        self.label_desativo.setAlignment(QtCore.Qt.AlignCenter)
        self.label_desativo.move(725, 480)  # 870,480
        self.label_desativo.resize(480, 50)  # Tamanho do Label # 220,50

        ######## Terminando a linha ########

        self.verticalLayout_10.addLayout(self._2)
        self.stackedWidget.addWidget(self.page_1)
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setObjectName("page_2")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.page_2)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.frame = QtWidgets.QFrame(self.page_2)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.frame)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.version_5 = QtWidgets.QLabel(self.frame)
        self.version_5.setAlignment(
            QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.version_5.setObjectName("version_5")
        self.gridLayout_4.addWidget(self.version_5, 0, 0, 1, 2)
        self.table_colaboradores = QtWidgets.QTableWidget(self.frame)
        self.table_colaboradores.setEnabled(True)
        self.table_colaboradores.setStyleSheet("QTableWidget {    \n"
                                               "    background-color: rgb(32, 32, 32);\n"
                                               "    padding: 10px;\n"
                                               "    border-radius: 5px;\n"
                                               "    gridline-color: rgb(95, 95, 95);\n"
                                               "    border-bottom: 1px solid rgb(95, 95, 95);\n"
                                               "    color:rgb(255,255,255)\n"
                                               "\n"
                                               "}\n"
                                               "QTableWidget::item{\n"
                                               "    border-color: rgb(95, 95, 95);\n"
                                               "    padding-left: 5px;\n"
                                               "    padding-right: 5px;\n"
                                               "    gridline-color: rgb(95, 95, 95);\n"
                                               "}\n"
                                               "QTableWidget::item:selected{\n"
                                               "    background-color: rgb(153, 51, 153);\n"
                                               "}\n"
                                               "QScrollBar:horizontal {\n"
                                               "    border: none;\n"
                                               "    background:  rgb(148, 0, 211);\n"
                                               "    height: 14px;\n"
                                               "    margin: 0px 21px 0 21px;\n"
                                               "    border-radius: 0px;\n"
                                               "}\n"
                                               " QScrollBar:vertical {\n"
                                               "    border: none;\n"
                                               "    background: rgb(148, 0, 211);\n"
                                               "    width: 10px;\n"
                                               "    margin: 11px 0 11px 0;\n"
                                               "    border-radius: 0px;\n"
                                               " }\n"
                                               "\n"
                                               "QHeaderView::section:horizontal\n"
                                               "{\n"
                                               "    border: 2px solid rgb(200,162, 211);\n"
                                               "    background-color: rgb(148, 0, 211);\n"
                                               "    color: rgb(255,255,255);\n"
                                               "    padding: 3px;\n"
                                               "    border-top-left-radius: 7px;\n"
                                               "    border-top-right-radius: 7px;\n"
                                               "}\n"
                                               "QHeaderView::section:vertical\n"
                                               "{\n"
                                               "    border: 1px solid rgb(85, 85, 85);\n"
                                               "    background-color: rgb(46, 46, 46);\n"
                                               "    color:rgb(95,95,95);\n"
                                               "\n"
                                               "} QScrollBar:vertical {\n"
                                               "    border: none;\n"
                                               "    background: rgb(148, 0, 211);\n"
                                               "    width: 14px;\n"
                                               "    margin: 21px 0 21px 0;\n"
                                               "    border-radius: 0px;\n"
                                               "\n"
                                               " }\n"
                                               "\n"
                                               "QScrollBar:horizontall {\n"
                                               "    border: none;\n"
                                               "    background: rgb(148, 0, 211);\n"
                                               "    width: 14px;\n"
                                               "    margin: 21px 0 21px 0;\n"
                                               "    border-radius: 0px;\n"
                                               " }\n"
                                               "QTableWidget QTableCornerButton::section{\n"
                                               "    \n"
                                               "    background-color: rgb(46,46,46);\n"
                                               "}\n"
                                               "\n"
                                               "")

        self.verticalLayout_10.addLayout(self.horizontalLayout_10)

        self.table_colaboradores.setLineWidth(0)
        self.table_colaboradores.setAutoScrollMargin(16)
        self.table_colaboradores.setRowCount(100)
        self.table_colaboradores.setObjectName("table_colaboradores")
        self.table_colaboradores.setColumnCount(6)
        item = QtWidgets.QTableWidgetItem()
        self.table_colaboradores.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_colaboradores.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_colaboradores.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_colaboradores.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_colaboradores.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_colaboradores.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_colaboradores.setVerticalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_colaboradores.setVerticalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_colaboradores.setVerticalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_colaboradores.setVerticalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_colaboradores.setVerticalHeaderItem(10, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_colaboradores.setVerticalHeaderItem(11, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_colaboradores.setVerticalHeaderItem(12, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_colaboradores.setHorizontalHeaderItem(0, item)

        # **************************#Retirar Coluna ID
        # self.table_colaboradores.setColumnHidden(0, True)
        # *****************************************************************************
        item = QtWidgets.QTableWidgetItem()
        self.table_colaboradores.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_colaboradores.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_colaboradores.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_colaboradores.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_colaboradores.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_colaboradores.horizontalHeader().setVisible(True)
        self.table_colaboradores.horizontalHeader().setCascadingSectionResizes(False)
        self.table_colaboradores.horizontalHeader().setDefaultSectionSize(270)
        self.table_colaboradores.horizontalHeader().setHighlightSections(True)
        self.table_colaboradores.horizontalHeader().setMinimumSectionSize(39)
        self.table_colaboradores.horizontalHeader().setSortIndicatorShown(True)
        self.table_colaboradores.horizontalHeader().setStretchLastSection(False)
        self.table_colaboradores.verticalHeader().setVisible(True)  # Titulos Laterais
        self.table_colaboradores.verticalHeader().setCascadingSectionResizes(False)
        self.table_colaboradores.verticalHeader().setHighlightSections(True)
        self.gridLayout_4.addWidget(self.table_colaboradores, 3, 0, 4, 1)
        self.horizontalLayout_20 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_20.setObjectName("horizontalLayout_20")
        self.horizontalLayout_16 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_16.setObjectName("horizontalLayout_16")
        self.version_6 = QtWidgets.QLabel(self.frame)
        self.version_6.setAlignment(
            QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.version_6.setObjectName("version_6")
        self.horizontalLayout_16.addWidget(self.version_6)
        self.lineEdit_nome_colaborador = QtWidgets.QLineEdit(self.frame)
        self.lineEdit_nome_colaborador.setStyleSheet("QLineEdit {\n"
                                                     "    \n"
                                                     "    font: 75 10pt \"Segoe UI\";\n"
                                                     "    border: 2px solid rgb(55, 55,55);\n"
                                                     "    border-radius: 2px;\n"
                                                     "    padding: 10px;\n"
                                                     "    background-color: rgb(30, 30, 30);    \n"
                                                     "    color: rgb(255, 255, 255);\n"
                                                     "}\n"
                                                     "QLineEdit:hover {\n"
                                                     "    border: 2px solid rgb(55, 55, 55);\n"
                                                     "}\n"
                                                     "QLineEdit:focus {\n"
                                                     "    border: 2px solid rgb(148, 0, 211);    \n"
                                                     "    color: rgb(148, 0, 211);\n"
                                                     "}\n"
                                                     "")
        self.lineEdit_nome_colaborador.setObjectName(
            "lineEdit_nome_colaborador")
        self.horizontalLayout_16.addWidget(self.lineEdit_nome_colaborador)
        self.horizontalLayout_20.addLayout(self.horizontalLayout_16)
        self.horizontalLayout_17 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_17.setObjectName("horizontalLayout_17")
        self.version_7 = QtWidgets.QLabel(self.frame)
        self.version_7.setAlignment(
            QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.version_7.setObjectName("version_7")
        self.horizontalLayout_17.addWidget(self.version_7)
        self.lineEdit_matricula_colaborador = QtWidgets.QLineEdit(self.frame)
        self.lineEdit_matricula_colaborador.setStyleSheet("QLineEdit {\n"
                                                          "    \n"
                                                          "    font: 75 10pt \"Segoe UI\";\n"
                                                          "    border: 2px solid rgb(55, 55,55);\n"
                                                          "    border-radius: 2px;\n"
                                                          "    padding: 10px;\n"
                                                          "    background-color: rgb(30, 30, 30);    \n"
                                                          "    color: rgb(255, 255, 255);\n"
                                                          "}\n"
                                                          "QLineEdit:hover {\n"
                                                          "    border: 2px solid rgb(55, 55, 55);\n"
                                                          "}\n"
                                                          "QLineEdit:focus {\n"
                                                          "    border: 2px solid rgb(148, 0, 211);    \n"
                                                          "    color: rgb(148, 0, 211);\n"
                                                          "}\n"
                                                          "")
        self.lineEdit_matricula_colaborador.setObjectName(
            "lineEdit_matricula_colaborador")
        self.lineEdit_matricula_colaborador.setMaxLength(8)
        self.horizontalLayout_17.addWidget(self.lineEdit_matricula_colaborador)
        self.horizontalLayout_20.addLayout(self.horizontalLayout_17)
        self.horizontalLayout_19 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_19.setObjectName("horizontalLayout_19")
        self.version_8 = QtWidgets.QLabel(self.frame)
        self.version_8.setAlignment(
            QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.version_8.setObjectName("version_8")
        self.horizontalLayout_19.addWidget(self.version_8)
        self.cbox_setor_colaborador = QtWidgets.QComboBox(self.frame)
        self.cbox_setor_colaborador.setStyleSheet("\n"
                                                  "    font: 75 10pt \"Segoe UI\";\n"
                                                  "    border: 2px solid rgb(255, 255,255);\n"
                                                  "    border-radius: 2px;\n"
                                                  "    padding: 10px;\n"
                                                  "    background-color: rgb(30, 30, 30);    \n"
                                                  "    color: rgb(255, 255, 255);\n"
                                                  "    border: 2px solid rgb(55, 55, 55);\n"
                                                  "\n"
                                                  "")
        self.cbox_setor_colaborador.setObjectName("cbox_setor_colaborador")
        self.cbox_setor_colaborador.addItem("")
        self.cbox_setor_colaborador.addItem("")
        self.cbox_setor_colaborador.addItem("")
        self.cbox_setor_colaborador.addItem("")
        self.cbox_setor_colaborador.addItem("")
        self.cbox_setor_colaborador.addItem("")
        self.cbox_setor_colaborador.addItem("")
        self.cbox_setor_colaborador.addItem("")
        self.cbox_setor_colaborador.addItem("")

        self.horizontalLayout_19.addWidget(self.cbox_setor_colaborador)

        self.horizontalLayout_20.addLayout(self.horizontalLayout_19)
        # self.horizontalLayout_20.addLayout(self.horizontalLayout_20)
        self.horizontalLayout_18 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_18.setObjectName("horizontalLayout_18")
        self.horizontalLayout_19 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_19.setObjectName("horizontalLayout_19")
        self.version_9 = QtWidgets.QLabel(self.frame)
        self.version_9.setAlignment(
            QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.version_9.setObjectName("version_9")
        self.horizontalLayout_18.addWidget(self.version_9)
        self.cbox_turno_colaborador = QtWidgets.QComboBox(self.frame)
        self.cbox_turno_colaborador.setStyleSheet("\n"
                                                  "    font: 75 10pt \"Segoe UI\";\n"
                                                  "    border: 2px solid rgb(255, 255,255);\n"
                                                  "    border-radius: 2px;\n"
                                                  "    padding: 10px;\n"
                                                  "    background-color: rgb(30, 30, 30);    \n"
                                                  "    color: rgb(255, 255, 255);\n"
                                                  "    border: 2px solid rgb(55, 55, 55);\n"
                                                  "\n"
                                                  "")
        self.cbox_turno_colaborador.setObjectName("cbox_turno_colaborador")
        self.cbox_turno_colaborador.addItem("")
        self.cbox_turno_colaborador.addItem("")
        self.horizontalLayout_18.addWidget(self.cbox_turno_colaborador)

        ######################### Campo de Permissão - Adicionado #####################

        self.cbox_permissao = QtWidgets.QComboBox(self.frame)
        self.cbox_permissao.setStyleSheet("    font: 75 10pt \"Segoe UI\";\n"
                                          "    border: 2px solid rgb(55, 55,55);\n"
                                          "    border-radius: 2px;\n"
                                          "    padding: 10px;\n"
                                          "    background-color: rgb(30, 30, 30);    \n"
                                          "    color: rgb(255, 255, 255);\n"
                                          "    border: 2px solid rgb(55, 55, 55);\n"
                                          "\n"
                                          "")
        self.cbox_permissao.setObjectName("cbox_permissao")
        self.cbox_permissao.addItem("")
        self.cbox_permissao.addItem("")

        self.version_11 = QtWidgets.QLabel(self.frame)
        self.version_11.setAlignment(
            QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.version_11.setObjectName("version_11")
        self.horizontalLayout_18.addWidget(self.version_11)
        self.horizontalLayout_18.addWidget(self.cbox_permissao)
        self.horizontalLayout_20.addLayout(self.horizontalLayout_18)
        # self.horizontalLayout_20.addLayout(self.version_11)

        ##########################################################

        self.btn_adicionar_colaborador = QtWidgets.QPushButton(self.frame)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(65)
        self.btn_adicionar_colaborador.setFont(font)
        self.btn_adicionar_colaborador.setStyleSheet("QPushButton {    \n"
                                                     "    background-color: rgb(148, 0, 211);\n"
                                                     "    border: 2px solid rgb(60, 60, 60);\n"
                                                     "    border-radius: 5px;\n"
                                                     "    padding: 15px;\n"
                                                     "    color:rgb(255,255,255)\n"
                                                     "}\n"
                                                     "QPushButton:hover {    \n"
                                                     "    background-color: rgb(200, 162, 200);\n"
                                                     "    border: 2px solid rgb(70, 70, 70);\n"
                                                     "}\n"
                                                     "QPushButton:pressed {    \n"
                                                     "    background-color: rgb(153, 51, 153);\n"
                                                     "    border: 2px solid rgb(153, 51, 153);    \n"
                                                     "    color: rgb(255, 255, 255);\n"
                                                     "}")
        self.btn_adicionar_colaborador.setAutoRepeatDelay(243)
        self.btn_adicionar_colaborador.setObjectName(
            "btn_adicionar_colaborador")
        self.horizontalLayout_18.addWidget(self.btn_adicionar_colaborador)
        self.horizontalLayout_20.addLayout(self.horizontalLayout_18)
        self.gridLayout_4.addLayout(self.horizontalLayout_20, 1, 0, 1, 5)
        self.version_10 = QtWidgets.QLabel(self.frame)
        self.version_10.setAlignment(
            QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.version_10.setObjectName("version_10")
        self.gridLayout_4.addWidget(self.version_10, 2, 0, 1, 1)
        self.verticalLayout_14 = QtWidgets.QVBoxLayout()
        self.verticalLayout_14.setObjectName("verticalLayout_14")
        self.btn_excluir_colaborador = QtWidgets.QPushButton(self.frame)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.btn_excluir_colaborador.setFont(font)
        self.btn_excluir_colaborador.setStyleSheet("QPushButton {    \n"
                                                   "    background-color: rgb(255, 85, 127);\n"
                                                   "    border: 2px solid rgb(60, 60, 60);\n"
                                                   "    border-radius: 5px;\n"
                                                   "    padding: 2em;\n"
                                                   "}\n"
                                                   "QPushButton:hover {    \n"
                                                   "    background-color: rgb(255, 95, 137);\n"
                                                   "    border: 2px solid rgb(70, 70, 70);\n"
                                                   "}\n"
                                                   "QPushButton:pressed {    \n"
                                                   "    background-color: rgb(255, 85, 127);\n"
                                                   "    border: 2px solid rgb(255, 85, 127);    \n"
                                                   "    color: rgb(255, 255, 255);\n"
                                                   "    \n"
                                                   "}")
        self.btn_excluir_colaborador.setObjectName("btn_excluir_colaborador")
        self.verticalLayout_14.addWidget(self.btn_excluir_colaborador)
        self.btn_editar_colaborador = QtWidgets.QPushButton(self.frame)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.btn_editar_colaborador.setFont(font)
        self.btn_editar_colaborador.setStyleSheet("QPushButton {    \n"
                                                  "    background-color:rgb(85, 255, 127);\n"
                                                  "    border: 2px solid rgb(60, 60, 60);\n"
                                                  "    border-radius: 5px;\n"
                                                  "    padding: 2em;\n"
                                                  "}\n"
                                                  "QPushButton:hover {    \n"
                                                  "    background-color:rgb(95, 255, 137);\n"
                                                  "    border: 2px solid rgb(70, 70, 70);\n"
                                                  "}\n"
                                                  "QPushButton:pressed {    \n"
                                                  "    background-color:rgb(105, 255, 147);\n"
                                                  "    border: 2px solid rgb(85, 255, 127);    \n"
                                                  "    color: rgb(255, 255, 255);\n"
                                                  "    \n"
                                                  "}")
        self.btn_editar_colaborador.setObjectName("btn_editar_colaborador")
        self.verticalLayout_14.addWidget(self.btn_editar_colaborador)
        self.gridLayout_4.addLayout(self.verticalLayout_14, 3, 1, 2, 1)
        self.verticalLayout_6.addWidget(self.frame)
        self.stackedWidget.addWidget(self.page_2)
        self.page_4 = QtWidgets.QWidget()
        self.page_4.setObjectName("page_4")
        self.gridLayout = QtWidgets.QGridLayout(self.page_4)
        self.gridLayout.setObjectName("gridLayout")
        self.label_2 = QtWidgets.QLabel(self.page_4)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("color:rgb(226, 226, 226);")
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 0, 0, 1, 2)
        self.table_coletor = QtWidgets.QTableWidget(self.page_4)
        self.table_coletor.setStyleSheet("QTableWidget {    \n"
                                         "    background-color: rgb(32, 32, 32);\n"
                                         "    padding: 10px;\n"
                                         "    border-radius: 5px;\n"
                                         "    gridline-color: rgb(95, 95, 95);\n"
                                         "    border-bottom: 1px solid rgb(95, 95, 95);\n"
                                         "    color: rgb(255,255,255);\n"
                                         "\n"
                                         "}\n"
                                         "QTableWidget::item{\n"
                                         "    border-color: rgb(95, 95, 95);\n"
                                         "    padding-left: 5px;\n"
                                         "    padding-right: 5px;\n"
                                         "    gridline-color: rgb(95, 95, 95);\n"
                                         "}\n"
                                         "QTableWidget::item:selected{\n"
                                         "    background-color: rgb(153, 51, 153);\n"
                                         "}\n"
                                         "QScrollBar:horizontal {\n"
                                         "    border: none;\n"
                                         "    background:  rgb(148, 0, 211);\n"
                                         "    height: 14px;\n"
                                         "    margin: 0px 21px 0 21px;\n"
                                         "    border-radius: 0px;\n"
                                         "}\n"
                                         " QScrollBar:vertical {\n"
                                         "    border: none;\n"
                                         "    background: rgb(148, 0, 211);\n"
                                         "    width: 10px;\n"
                                         "    margin: 11px 0 11px 0;\n"
                                         "    border-radius: 0px;\n"
                                         " }\n"
                                         "\n"
                                         "QHeaderView::section:horizontal\n"
                                         "{\n"
                                         "    border: 2px solid rgb(200,162, 211);\n"
                                         "    background-color: rgb(148, 0, 211);\n"
                                         "    color: rgb(255,255,255);\n"
                                         "    \n"
                                         "    padding: 3px;\n"
                                         "    border-top-left-radius: 7px;\n"
                                         "    border-top-right-radius: 7px;\n"
                                         "}\n"
                                         "QHeaderView::section:vertical\n"
                                         "{\n"
                                         # Borda
                                         "    border: 1px solid rgb(85, 85, 85);\n"
                                         "    background-color: rgb(46, 46, 46);\n"
                                         "    color: rgb(95,95,95);\n"
                                         "\n"
                                         "} QScrollBar:vertical {\n"
                                         "    border: none;\n"
                                         "    background: rgb(148, 0, 211);\n"
                                         "    width: 14px;\n"
                                         "    margin: 21px 0 21px 0;\n"
                                         "    border-radius: 0px;\n"
                                         " }\n"
                                         "\n"
                                         "QScrollBar:horizontall {\n"
                                         "    border: none;\n"
                                         "    background: rgb(148, 0, 211);\n"
                                         "    width: 14px;\n"
                                         "    margin: 21px 0 21px 0;\n"
                                         "    border-radius: 0px;\n"
                                         " }\n"
                                         "QTableWidget QTableCornerButton::section{\n"
                                         "    \n"
                                         "    background-color: rgb(46,46,46);\n"
                                         "}\n"
                                         "\n"
                                         "")
        self.table_coletor.setRowCount(250)
        self.table_coletor.verticalHeader().setVisible(False)  # Titulos Laterais
        self.table_coletor.setObjectName("table_coletor")
        self.table_coletor.setColumnCount(5)
        item = QtWidgets.QTableWidgetItem()
        self.table_coletor.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_coletor.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_coletor.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_coletor.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_coletor.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_coletor.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_coletor.setVerticalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_coletor.setVerticalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_coletor.setHorizontalHeaderItem(0, item)
        # self.table_coletor.setColumnHidden(0, True) #Coluna lateiral TITULO
        item = QtWidgets.QTableWidgetItem()
        self.table_coletor.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_coletor.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_coletor.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_coletor.setHorizontalHeaderItem(4, item)
        self.table_coletor.horizontalHeader().setDefaultSectionSize(270)
        self.table_coletor.horizontalHeader().setStretchLastSection(False)
        self.table_coletor.horizontalHeader().setSortIndicatorShown(True)
        self.table_coletor.horizontalHeader().setHighlightSections(True)
        self.table_coletor.verticalHeader().setHighlightSections(True)
        self.table_coletor.verticalHeader().setVisible(True)
        self.table_coletor.verticalHeader().setCascadingSectionResizes(False)
        self.gridLayout.addWidget(self.table_coletor, 6, 0, 1, 1)
        self.verticalLayout_16 = QtWidgets.QVBoxLayout()
        self.verticalLayout_16.setObjectName("verticalLayout_16")
        self.btn_editar_coletor = QtWidgets.QPushButton(self.page_4)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.btn_editar_coletor.setFont(font)
        self.btn_editar_coletor.setStyleSheet("QPushButton {    \n"
                                              "    background-color:rgb(85, 255, 127);\n"
                                              "    border: 2px solid rgb(60, 60, 60);\n"
                                              "    border-radius: 5px;\n"
                                              "    padding: 2em;\n"
                                              "}\n"
                                              "QPushButton:hover {    \n"
                                              "    background-color:rgb(95, 255, 137);\n"
                                              "    border: 2px solid rgb(70, 70, 70);\n"
                                              "}\n"
                                              "QPushButton:pressed {    \n"
                                              "    background-color:rgb(105, 255, 147);\n"
                                              "    border: 2px solid rgb(85, 255, 127);    \n"
                                              "    color: rgb(255, 255, 255);\n"
                                              "    \n"
                                              "}")
        self.btn_editar_coletor.setObjectName("btn_editar_coletor")
        self.verticalLayout_16.addWidget(self.btn_editar_coletor)
        self.btn_excluir_coletor = QtWidgets.QPushButton(self.page_4)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.btn_excluir_coletor.setFont(font)
        self.btn_excluir_coletor.setStyleSheet("QPushButton {    \n"
                                               "    background-color: rgb(255, 85, 127);\n"
                                               "    border: 2px solid rgb(60, 60, 60);\n"
                                               "    border-radius: 5px;\n"
                                               "    padding: 2em;\n"
                                               "}\n"
                                               "QPushButton:hover {    \n"
                                               "    background-color: rgb(255, 95, 137);\n"
                                               "    border: 2px solid rgb(70, 70, 70);\n"
                                               "}\n"
                                               "QPushButton:pressed {    \n"
                                               "    background-color: rgb(255, 85, 127);\n"
                                               "    border: 2px solid rgb(255, 85, 127);    \n"
                                               "    color: rgb(255, 255, 255);\n"
                                               "    \n"
                                               "}")
        self.btn_excluir_coletor.setObjectName("btn_excluir_coletor")
        self.verticalLayout_16.addWidget(self.btn_excluir_coletor)
        self.gridLayout.addLayout(self.verticalLayout_16, 6, 1, 1, 1)
        self.version_13 = QtWidgets.QLabel(self.page_4)
        self.version_13.setAlignment(
            QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.version_13.setObjectName("version_13")
        self.gridLayout.addWidget(self.version_13, 4, 0, 1, 1)
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.version_17 = QtWidgets.QLabel(self.page_4)
        self.version_17.setAlignment(
            QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.version_17.setObjectName("version_17")
        self.horizontalLayout_4.addWidget(self.version_17)
        self.lineEdit_seriecoletor = QtWidgets.QLineEdit(self.page_4)
        self.lineEdit_seriecoletor.setStyleSheet("QLineEdit {\n"
                                                 "    \n"
                                                 "    font: 75 10pt \"Segoe UI\";\n"
                                                 "    border: 2px solid rgb(55, 55,55);\n"
                                                 "    border-radius: 2px;\n"
                                                 "    padding: 10px;\n"
                                                 "    background-color: rgb(30, 30, 30);    \n"
                                                 "    color: rgb(255, 255, 255);\n"
                                                 "}\n"
                                                 "QLineEdit:hover {\n"
                                                 "    border: 2px solid rgb(55, 55, 55);\n"
                                                 "}\n"
                                                 "QLineEdit:focus {\n"
                                                 "    border: 2px solid rgb(148, 0, 211);    \n"
                                                 "    color: rgb(148, 0, 211);\n"
                                                 "}\n"
                                                 "")
        self.lineEdit_seriecoletor.setObjectName("lineEdit_seriecoletor")
        self.lineEdit_seriecoletor.setMaxLength(18)
        self.horizontalLayout_4.addWidget(self.lineEdit_seriecoletor)
        self.horizontalLayout_11.addLayout(self.horizontalLayout_4)
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.version_16 = QtWidgets.QLabel(self.page_4)
        self.version_16.setAlignment(
            QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.version_16.setObjectName("version_16")
        self.horizontalLayout_3.addWidget(self.version_16)
        self.lineEdit_addcoletor = QtWidgets.QLineEdit(self.page_4)
        self.lineEdit_addcoletor.setStyleSheet("QLineEdit {\n"
                                               "    \n"
                                               "    font: 75 10pt \"Segoe UI\";\n"
                                               "    border: 2px solid rgb(55, 55,55);\n"
                                               "    border-radius: 2px;\n"
                                               "    padding: 10px;\n"
                                               "    background-color: rgb(30, 30, 30);    \n"
                                               "    color: rgb(255, 255, 255);\n"
                                               "}\n"
                                               "QLineEdit:hover {\n"
                                               "    border: 2px solid rgb(55, 55, 55);\n"
                                               "}\n"
                                               "QLineEdit:focus {\n"
                                               "    border: 2px solid rgb(148, 0, 211);    \n"
                                               "    color: rgb(148, 0, 211);\n"
                                               "}\n"
                                               "")
        self.lineEdit_addcoletor.setObjectName("lineEdit_addcoletor")
        self.lineEdit_addcoletor.setMaxLength(4)
        self.horizontalLayout_3.addWidget(self.lineEdit_addcoletor)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.version_18 = QtWidgets.QLabel(self.page_4)
        self.version_18.setAlignment(
            QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.version_18.setObjectName("version_18")
        self.horizontalLayout_6.addWidget(self.version_18)
        self.cbox_modelo = QtWidgets.QComboBox(self.page_4)
        self.cbox_modelo.setStyleSheet("    font: 75 10pt \"Segoe UI\";\n"
                                       "    border: 2px solid rgb(55, 55,55);\n"
                                       "    border-radius: 2px;\n"
                                       "    padding: 10px;\n"
                                       "    background-color: rgb(30, 30, 30);    \n"
                                       "    color: rgb(255, 255, 255);\n"
                                       "    border: 2px solid rgb(55, 55, 55);\n"
                                       "\n"
                                       "")
        self.cbox_modelo.setObjectName("cbox_modelo")
        self.cbox_modelo.addItem("")
        self.cbox_modelo.addItem("")
        self.cbox_modelo.addItem("")
        self.horizontalLayout_6.addWidget(self.cbox_modelo)
        self.horizontalLayout_3.addLayout(self.horizontalLayout_6)
        self.horizontalLayout_9.addLayout(self.horizontalLayout_3)
        self.version_19 = QtWidgets.QLabel(self.page_4)
        self.version_19.setAlignment(
            QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.version_19.setObjectName("version_19")
        self.horizontalLayout_9.addWidget(self.version_19)
        self.cbox_statuscoletor = QtWidgets.QComboBox(self.page_4)
        self.cbox_statuscoletor.setStyleSheet("    font: 75 10pt \"Segoe UI\";\n"
                                              "    border: 2px solid rgb(55, 55,55);\n"
                                              "    border-radius: 2px;\n"
                                              "    padding: 10px;\n"
                                              "    background-color: rgb(30, 30, 30);    \n"
                                              "    color: rgb(255, 255, 255);\n"
                                              "    border: 2px solid rgb(55, 55, 55);\n"
                                              "\n"
                                              "")
        self.cbox_statuscoletor.setObjectName("cbox_statuscoletor")
        self.cbox_statuscoletor.addItem("")
        self.cbox_statuscoletor.addItem("")
        self.horizontalLayout_9.addWidget(self.cbox_statuscoletor)
        self.btn_adicionar_coletor = QtWidgets.QPushButton(self.page_4)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.btn_adicionar_coletor.setFont(font)
        self.btn_adicionar_coletor.setStyleSheet("QPushButton {    \n"
                                                 "    background-color: rgb(148, 0, 211);\n"
                                                 "    border: 2px solid rgb(60, 60, 60);\n"
                                                 "        border-radius: 5px;\n"
                                                 "    padding: 15px;\n"
                                                 "    color:rgb(255,255,255)\n"
                                                 "}\n"
                                                 "QPushButton:hover {    \n"
                                                 "    background-color: rgb(200, 162, 200);\n"
                                                 "    border: 2px solid rgb(70, 70, 70);\n"
                                                 "}\n"
                                                 "QPushButton:pressed {    \n"
                                                 "    background-color: rgb(153, 51, 153);\n"
                                                 "    border: 2px solid rgb(153, 51, 153);    \n"
                                                 "    color: rgb(255, 255, 255);\n"
                                                 "    \n"
                                                 "}")
        self.btn_adicionar_coletor.setObjectName("btn_adicionar_coletor")
        self.horizontalLayout_9.addWidget(self.btn_adicionar_coletor)
        self.horizontalLayout_11.addLayout(self.horizontalLayout_9)
        self.gridLayout.addLayout(self.horizontalLayout_11, 2, 0, 1, 2)
        spacerItem2 = QtWidgets.QSpacerItem(
            20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem2, 1, 0, 1, 1)
        spacerItem3 = QtWidgets.QSpacerItem(
            20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem3, 3, 0, 1, 1)
        spacerItem4 = QtWidgets.QSpacerItem(
            20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem4, 5, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_4)
        self.page_3 = QtWidgets.QWidget()
        self.page_3.setObjectName("page_3")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.page_3)
        self.gridLayout_2.setObjectName("gridLayout_2")
        spacerItem5 = QtWidgets.QSpacerItem(
            20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.gridLayout_2.addItem(spacerItem5, 2, 0, 1, 1)
        self.verticalLayout_7 = QtWidgets.QVBoxLayout()
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.version_3 = QtWidgets.QLabel(self.page_3)
        self.version_3.setAlignment(
            QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.version_3.setObjectName("version_3")
        self.verticalLayout_7.addWidget(self.version_3)
        self.horizontalLayout_13 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_13.setObjectName("horizontalLayout_13")
        self.btn_pesquisar = QtWidgets.QPushButton(self.page_3)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.btn_pesquisar.setFont(font)
        self.btn_pesquisar.setStyleSheet("QPushButton {    \n"
                                         "    background-color: rgb(148, 0, 211);\n"
                                         "    border: 2px solid rgb(60, 60, 60);\n"
                                         "        border-radius: 5px;\n"
                                         "    padding: 15px;\n"
                                         "    color:rgb(255,255,255)\n"
                                         "}\n"
                                         "QPushButton:hover {    \n"
                                         "    background-color: rgb(200, 162, 200);\n"
                                         "    border: 2px solid rgb(70, 70, 70);\n"
                                         "}\n"
                                         "QPushButton:pressed {    \n"
                                         "    background-color: rgb(153, 51, 153);\n"
                                         "    border: 2px solid rgb(153, 51, 153);    \n"
                                         "    color: rgb(255, 255, 255);\n"
                                         "    \n"
                                         "}")
        self.btn_pesquisar.setObjectName("btn_pesquisar")
        self.horizontalLayout_13.addWidget(self.btn_pesquisar)
        # self.dateEdit_pesquisa = QtWidgets.QDateEdit(self.page_3)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(10)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        # self.dateEdit_pesquisa.setFont(font)

        # self.dateEdit_pesquisa.setInputMethodHints(QtCore.Qt.ImhPreferNumbers)
        # self.dateEdit_pesquisa.setFrame(True)
        # self.dateEdit_pesquisa.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        # self.dateEdit_pesquisa.setMinimumDate(QtCore.QDate(2020, 9, 1))
        # self.dateEdit_pesquisa.setCalendarPopup(True)
        # self.dateEdit_pesquisa.setObjectName("dateEdit_pesquisa")
        # self.horizontalLayout_13.addWidget(self.dateEdit_pesquisa)
        self.lineEdit_buscar_matricula = QtWidgets.QLineEdit(self.page_3)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(9)
        self.lineEdit_buscar_matricula.setFont(font)
        self.lineEdit_buscar_matricula.setStyleSheet("QLineEdit {\n"
                                                     "    \n"
                                                     "    font: 75 12pt \"Segoe UI\";\n"
                                                     "    border: 2px solid rgb(55, 55,55);\n"
                                                     "    border-radius: 5px;\n"
                                                     "    padding: 15px;\n"
                                                     "    background-color: rgb(30, 30, 30);    \n"
                                                     "    color: rgb(255, 255, 255);\n"
                                                     "}\n"
                                                     "QLineEdit:hover {\n"
                                                     "    border: 2px solid rgb(55, 55, 55);\n"
                                                     "}\n"
                                                     "QLineEdit:focus {\n"
                                                     "    border: 2px solid rgb(148, 0, 211);    \n"
                                                     "    color: rgb(148, 0, 211);\n"
                                                     "}\n"
                                                     "")
        self.lineEdit_buscar_matricula.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_buscar_matricula.setMaxLength(30)
        self.lineEdit_buscar_matricula.setObjectName(
            "lineEdit_buscar_matricula")
        self.horizontalLayout_13.addWidget(self.lineEdit_buscar_matricula)
        # self.lineEdit_buscar_coletor = QtWidgets.QLineEdit(self.page_3)
        # self.lineEdit_buscar_coletor.setStyleSheet("QLineEdit {\n"

        # self.lineEdit_buscar_coletor.setAlignment(QtCore.Qt.AlignCenter)
        # self.lineEdit_buscar_coletor.setMaxLength(4)
        # self.lineEdit_buscar_coletor.setObjectName("lineEdit_buscar_coletor")
        # self.horizontalLayout_13.addWidget(self.lineEdit_buscar_coletor)
        self.verticalLayout_7.addLayout(self.horizontalLayout_13)
        self.gridLayout_2.addLayout(self.verticalLayout_7, 1, 0, 1, 1)
        self.table_banco_lancamento = QtWidgets.QTableWidget(self.page_3)
        self.table_banco_lancamento.setStyleSheet("QTableWidget {    \n"
                                                  "    background-color: rgb(32, 32, 32);\n"
                                                  "    padding: 10px;\n"
                                                  "    border-radius: 5px;\n"
                                                  "    gridline-color: rgb(95, 95, 95);\n"
                                                  "    border-bottom: 1px solid rgb(95, 95, 95);\n"
                                                  "    color:rgb(255,255,255);\n"
                                                  "\n"
                                                  "}\n"
                                                  "QTableWidget::item{\n"
                                                  "    border-color: rgb(95, 95, 95);\n"
                                                  "    padding-left: 5px;\n"
                                                  "    padding-right: 5px;\n"
                                                  "    gridline-color: rgb(95, 95, 95);\n"
                                                  "}\n"
                                                  "QTableWidget::item:selected{\n"
                                                  "    background-color: rgb(153, 51, 153);\n"
                                                  "}\n"
                                                  "QScrollBar:horizontal {\n"
                                                  "    border: none;\n"
                                                  "    background:  rgb(148, 0, 211);\n"
                                                  "    height: 14px;\n"
                                                  "    margin: 0px 21px 0 21px;\n"
                                                  "    border-radius: 0px;\n"
                                                  "}\n"
                                                  " QScrollBar:vertical {\n"
                                                  "    border: none;\n"
                                                  "    background: rgb(148, 0, 211);\n"
                                                  "    width: 10px;\n"
                                                  "    margin: 11px 0 11px 0;\n"
                                                  "    border-radius: 0px;\n"
                                                  " }\n"
                                                  "\n"
                                                  "QHeaderView::section:horizontal\n"
                                                  "{\n"
                                                  "    border: 2px solid rgb(200,162, 211);\n"
                                                  "    background-color: rgb(148, 0, 211);\n"
                                                  "    color: rgb(255,255,255);\n"
                                                  "    \n"
                                                  "    padding: 3px;\n"
                                                  "    border-top-left-radius: 7px;\n"
                                                  "    border-top-right-radius: 7px;\n"
                                                  "}\n"
                                                  " QScrollBar:vertical {\n"
                                                  "    border: none;\n"
                                                  "    background: rgb(148, 0, 211);\n"
                                                  "    width: 14px;\n"
                                                  "    margin: 21px 0 21px 0;\n"
                                                  "    border-radius: 0px;\n"
                                                  " }\n"
                                                  "\n"
                                                  "QScrollBar:horizontall {\n"
                                                  "    border: none;\n"
                                                  "    background: rgb(148, 0, 211);\n"
                                                  "    width: 14px;\n"
                                                  "    margin: 21px 0 21px 0;\n"
                                                  "    border-radius: 0px;\n"
                                                  " }\n"
                                                  "QHeaderView::section\n"
                                                  "{\n"
                                                  "    background-color:rgb(46,46,46);\n"
                                                  "    color: rgb(95,95,95);\n"
                                                  "    padding-left: 4px;\n"
                                                  "    border: 1px solid rgb(70,70,70)}\n"
                                                  "\n"
                                                  "QWidget:item:hover\n"
                                                  "{\n"
                                                  "    background-color: rgb(143,0,211);\n"
                                                  "    color: rgb(255,255,255);\n"
                                                  "}\n"
                                                  "QWidget:focus\n"
                                                  "{\n"
                                                  "    border: 2px solid rgb(143,0,211)\n"
                                                  "}\n"
                                                  "\n"
                                                  "QTableWidget QTableCornerButton::section{\n"
                                                  "    \n"
                                                  "    background-color: rgb(46,46,46);\n"
                                                  "}\n"
                                                  "\n"
                                                  "")
        self.table_banco_lancamento.setObjectName("table_banco_lancamento")
        self.table_banco_lancamento.setColumnCount(12)
        self.table_banco_lancamento.setRowCount(12)
        item = QtWidgets.QTableWidgetItem()
        self.table_banco_lancamento.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_banco_lancamento.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_banco_lancamento.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_banco_lancamento.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_banco_lancamento.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_banco_lancamento.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_banco_lancamento.setVerticalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_banco_lancamento.setVerticalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_banco_lancamento.setVerticalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_banco_lancamento.setVerticalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_banco_lancamento.setVerticalHeaderItem(10, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_banco_lancamento.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_banco_lancamento.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_banco_lancamento.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_banco_lancamento.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_banco_lancamento.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_banco_lancamento.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_banco_lancamento.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_banco_lancamento.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_banco_lancamento.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_banco_lancamento.setHorizontalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_banco_lancamento.setHorizontalHeaderItem(10, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_banco_lancamento.setHorizontalHeaderItem(11, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_banco_lancamento.horizontalHeader().setDefaultSectionSize(120)
        self.table_banco_lancamento.verticalHeader().setMinimumSectionSize(30)
        self.gridLayout_2.addWidget(self.table_banco_lancamento, 5, 0, 1, 2)
        self.label = QtWidgets.QLabel(self.page_3)
        font = QtGui.QFont()
        font.setPointSize(40)
        self.label.setFont(font)
        self.label.setStyleSheet("color: #FFF;")
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.gridLayout_2.addWidget(self.label, 0, 0, 1, 1)
        self.version_2 = QtWidgets.QLabel(self.page_3)
        self.version_2.setAlignment(
            QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.version_2.setObjectName("version_2")
        self.gridLayout_2.addWidget(self.version_2, 3, 0, 1, 1)
        self.horizontalLayout_14 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_14.setContentsMargins(0, 0, -1, 0)
        self.horizontalLayout_14.setSpacing(700)
        self.horizontalLayout_14.setObjectName("horizontalLayout_14")
        self.btn_excluir_dados = QtWidgets.QPushButton(self.page_3)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.btn_excluir_dados.setFont(font)
        self.btn_excluir_dados.setStyleSheet("\n"
                                             "QPushButton {    \n"
                                             "    background-color: rgb(255, 85, 127);\n"
                                             "    border: 2px solid rgb(60, 60, 60);\n"
                                             "        border-radius: 5px;\n"
                                             "    padding: 15px;\n"
                                             "    color:rgb(255,255,255)\n"
                                             "}\n"
                                             "QPushButton:hover {    \n"
                                             "    background-color: rgb(255, 95, 137);\n"
                                             "    border: 2px solid rgb(70, 70, 70);\n"
                                             "}\n"
                                             "QPushButton:pressed {    \n"
                                             "    background-color: rgb(255, 85, 127);\n"
                                             "    border: 2px solid rgb(153, 51, 153);    \n"
                                             "    color: rgb(255, 255, 255);\n"
                                             "    \n"
                                             "}\n"
                                             "")
        self.btn_excluir_dados.setObjectName("btn_excluir_dados")
        self.horizontalLayout_14.addWidget(self.btn_excluir_dados)
        self.btn_editar_dados = QtWidgets.QPushButton(self.page_3)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.btn_editar_dados.setFont(font)
        self.btn_editar_dados.setStyleSheet("QPushButton {    \n"
                                            "    background-color:rgb(85, 255, 127);\n"
                                            "    border: 2px solid rgb(60, 60, 60);\n"
                                            "        border-radius: 5px;\n"
                                            "    padding: 15px;\n"
                                            "    color:rgb(32, 0, 49);\n"
                                            "}\n"
                                            "QPushButton:hover {    \n"
                                            "    background-color:rgb(95, 255, 137);\n"
                                            "    border: 2px solid rgb(70, 70, 70);\n"
                                            "}\n"
                                            "QPushButton:pressed {    \n"
                                            "    background-color:rgb(105, 255, 147);\n"
                                            "    border: 2px solid rgb(153, 51, 153);    \n"
                                            "    color: rgb(255, 255, 255);\n"
                                            "    \n"
                                            "}\n"
                                            "\n"
                                            "")
        self.btn_editar_dados.setObjectName("btn_editar_dados")
        self.horizontalLayout_14.addWidget(self.btn_editar_dados)
        self.gridLayout_2.addLayout(self.horizontalLayout_14, 6, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_3)
        self.verticalLayout_5.addWidget(self.stackedWidget)
        spacerItem6 = QtWidgets.QSpacerItem(
            17, 37, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_5.addItem(spacerItem6)
        self.bottomBar = QtWidgets.QFrame(self.frame_pages)
        self.bottomBar.setMinimumSize(QtCore.QSize(0, 22))
        self.bottomBar.setMaximumSize(QtCore.QSize(16777215, 22))
        self.bottomBar.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.bottomBar.setFrameShadow(QtWidgets.QFrame.Raised)
        self.bottomBar.setObjectName("bottomBar")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.bottomBar)
        self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_5.setSpacing(0)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.creditsLabel = QtWidgets.QLabel(self.bottomBar)
        self.creditsLabel.setMaximumSize(QtCore.QSize(16777215, 16))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.creditsLabel.setFont(font)
        self.creditsLabel.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.creditsLabel.setObjectName("creditsLabel")
        self.horizontalLayout_5.addWidget(self.creditsLabel)
        self.version = QtWidgets.QLabel(self.bottomBar)
        self.version.setAlignment(
            QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.version.setObjectName("version")
        self.horizontalLayout_5.addWidget(self.version)
        self.frame_size_grip = QtWidgets.QFrame(self.bottomBar)
        self.frame_size_grip.setMinimumSize(QtCore.QSize(20, 0))
        self.frame_size_grip.setMaximumSize(QtCore.QSize(20, 16777215))
        self.frame_size_grip.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frame_size_grip.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_size_grip.setObjectName("frame_size_grip")
        self.horizontalLayout_5.addWidget(self.frame_size_grip)
        self.verticalLayout_5.addWidget(self.bottomBar)
        self.horizontalLayout_2.addWidget(self.frame_pages)
        self.verticalLayout.addWidget(self.Content)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate(
            "MainWindow", "Usuário Logado : Collector Control"))
        self.Btn_Toggle.setText(_translate("MainWindow", "CD-RJ"))  # Mudar CD
        self.label_credits.setText(_translate(
            "MainWindow", "<html><head/><body><p>Ferramenta Controle de Coletores </p></body></html>"))
        self.btn_page_1.setText(_translate("MainWindow", "Home"))
        self.btn_page_2.setText(_translate("MainWindow", "Pesquisar"))
        self.btn_page_3.setText(_translate("MainWindow", "Colaborador"))
        self.btn_page_4.setText(_translate("MainWindow", "Coletor"))
        self.label_6.setText(_translate(
            "MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:22pt; font-weight:600; color:#e3e3e3;\">CONTROLE DE COLETORES - RIO JANEIRO </span></p></body></html>"))  # Mudar CD
        self.lineEdit_matricula.setToolTip(_translate(
            "MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-weight:600;\"><br/></span></p></body></html>"))
        self.lineEdit_matricula.setPlaceholderText(
            _translate("MainWindow", "Inserir Matrícula"))
        self.lineEdit_coletor.setToolTip(_translate(
            "MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-weight:600;\"><br/></span></p></body></html>"))
        self.lineEdit_coletor.setPlaceholderText(
            _translate("MainWindow", "Inserir o N° Coletor"))
        self.label_7.setText(_translate(
            "MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:10pt;\">Nome do Colaborador</span></p></body></html>"))
        self.label_8.setText(_translate(
            "MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:10pt;\">Numeração do Coletor</span></p></body></html>"))
        self.label_nome.setToolTip(_translate(
            "MainWindow", "<html><head/><body><p align=\"center\"><br/></p></body></html>"))
        self.label_nome.setText(_translate(
            "MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:11pt;\">"))
        # self.label_ncoletor2.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:11pt;\"></span></p></body></html>"))
        self.label_ncoletor.setText(_translate(
            "MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:11pt;\"></span></p></body></html>"))
        self.btn_entrada.setText(_translate("MainWindow", "RETIRADA"))
        self.btn_saida.setText(_translate("MainWindow", "DEVOLUÇÃO"))
        self.version_5.setText(_translate(
            "MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:14pt; font-weight:600; color:#aaaaaa;\">Cadastro Colaborador</span></p></body></html>"))
        item = self.table_colaboradores.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.table_colaboradores.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.table_colaboradores.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.table_colaboradores.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.table_colaboradores.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.table_colaboradores.verticalHeaderItem(5)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.table_colaboradores.verticalHeaderItem(6)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.table_colaboradores.verticalHeaderItem(7)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.table_colaboradores.verticalHeaderItem(8)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.table_colaboradores.verticalHeaderItem(9)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.table_colaboradores.verticalHeaderItem(10)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.table_colaboradores.verticalHeaderItem(11)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.table_colaboradores.verticalHeaderItem(12)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.table_colaboradores.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Id Colaborador"))
        item = self.table_colaboradores.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Nome Completo"))
        item = self.table_colaboradores.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Matricula"))
        item = self.table_colaboradores.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Setor"))
        item = self.table_colaboradores.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Turno"))
        item = self.table_colaboradores.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Status"))
        self.version_6.setText(_translate(
            "MainWindow", "<html><head/><body><p align=\"center\"><span style=\" color:#aaaaaa;\">Nome Completo</span></p></body></html>"))
        self.version_7.setText(_translate(
            "MainWindow", "<html><head/><body><p align=\"center\"><span style=\" color:#aaaaaa;\">Matricula</span></p></body></html>"))
        self.version_8.setText(_translate(
            "MainWindow", "<html><head/><body><p align=\"center\"><span style=\" color:#aaaaaa;\">Setor</span></p></body></html>"))
        self.version_9.setText(_translate(
            "MainWindow", "<html><head/><body><p align=\"center\"><span style=\" color:#aaaaaa;\">Turno</span></p></body></html>"))
        self.version_11.setText(_translate(
            "MainWindow", "<html><head/><body><p align=\"center\"><span style=\" color:#aaaaaa;\">Status</span></p></body></html>"))
        # self.version_10.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" color:#aaaaaa;\">Turno</span></p></body></html>")) # Layout Acima
        self.cbox_turno_colaborador.setItemText(
            0, _translate("MainWindow", "Diurno"))
        self.cbox_turno_colaborador.setItemText(
            1, _translate("MainWindow", "Noturno"))
        self.cbox_permissao.setItemText(0, _translate("MainWindow", "Ativo"))
        self.cbox_permissao.setItemText(
            1, _translate("MainWindow", "Desativado"))

        # Campo Setor

        self.cbox_setor_colaborador.setItemText(
            0, _translate("MainWindow", "Avaria"))
        self.cbox_setor_colaborador.setItemText(
            1, _translate("MainWindow", "Administração"))
        self.cbox_setor_colaborador.setItemText(
            2, _translate("MainWindow", "Controle de Estoque"))
        self.cbox_setor_colaborador.setItemText(
            3, _translate("MainWindow", "Devolução"))
        self.cbox_setor_colaborador.setItemText(
            4, _translate("MainWindow", "Expedição"))
        self.cbox_setor_colaborador.setItemText(
            5, _translate("MainWindow", "Reabastecimento"))
        self.cbox_setor_colaborador.setItemText(
            6, _translate("MainWindow", "Recebimento"))
        self.cbox_setor_colaborador.setItemText(
            7, _translate("MainWindow", "Embalagem"))
        self.cbox_setor_colaborador.setItemText(
            8, _translate("MainWindow", "Separação"))

        self.btn_adicionar_colaborador.setText(
            _translate("MainWindow", "Adicionar"))
        self.version_10.setText(_translate(
            "MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:12pt; font-weight:600; color:#aaaaaa;\">Banco de Dados - Colaboradores</span></p></body></html>"))
        self.btn_excluir_colaborador.setText(
            _translate("MainWindow", "Excluir"))
        self.btn_editar_colaborador.setText(_translate("MainWindow", "Editar"))
        self.label_2.setToolTip(_translate(
            "MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:12pt; color:#d8d8d8;\">Cadastrar Coletores</span></p></body></html>"))
        self.label_2.setText(_translate("MainWindow", "Cadastro Coletores"))
        item = self.table_coletor.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.table_coletor.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.table_coletor.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.table_coletor.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.table_coletor.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.table_coletor.verticalHeaderItem(5)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.table_coletor.verticalHeaderItem(6)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.table_coletor.verticalHeaderItem(7)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.table_coletor.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Id Coletor"))
        item = self.table_coletor.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Serial Number"))
        item = self.table_coletor.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "N° Coletor"))
        item = self.table_coletor.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Modelo"))
        item = self.table_coletor.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Status Coletor"))
        self.btn_editar_coletor.setText(_translate("MainWindow", "Editar"))
        self.btn_excluir_coletor.setText(_translate("MainWindow", "Excluir"))
        self.version_13.setText(_translate(
            "MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:12pt; color:#aaaaaa;\">Banco de Dados - Coletores</span></p></body></html>"))
        self.version_17.setText(_translate(
            "MainWindow", "<html><head/><body><p align=\"center\"><span style=\" color:#aaaaaa;\">N° de Série</span></p></body></html>"))
        self.version_16.setText(_translate(
            "MainWindow", "<html><head/><body><p align=\"center\"><span style=\" color:#aaaaaa;\">Coletor</span></p></body></html>"))
        self.version_18.setText(_translate(
            "MainWindow", "<html><head/><body><p align=\"center\"><span style=\" color:#aaaaaa;\">Modelo</span></p></body></html>"))
        self.cbox_modelo.setItemText(0, _translate("MainWindow", "HoneyWell"))
        self.cbox_modelo.setItemText(1, _translate("MainWindow", "Intermec"))
        self.cbox_modelo.setItemText(2, _translate("MainWindow", "Zebra"))
        self.version_19.setText(_translate(
            "MainWindow", "<html><head/><body><p align=\"center\"><span style=\" color:#aaaaaa;\">Status Coletor</span></p></body></html>"))
        self.cbox_statuscoletor.setItemText(
            0, _translate("MainWindow", "Ativo"))
        self.cbox_statuscoletor.setItemText(
            1, _translate("MainWindow", "Desativado"))
        self.btn_adicionar_coletor.setText(
            _translate("MainWindow", "Adicionar"))
        self.version_3.setText(_translate(
            "MainWindow", "<html><head/><body><p align=\"center\"><span style=\" color:#aaaaaa;\">Pesquisa Avançada</span></p></body></html>"))
        self.btn_pesquisar.setText(_translate("MainWindow", "Pesquisar"))
        self.lineEdit_buscar_matricula.setPlaceholderText(_translate(
            "MainWindow", "Buscar Avançada : Coletor, Matrícula, Nome, Status, Turno, Serial e etc.  "))
        # self.lineEdit_buscar_coletor.setPlaceholderText(_translate("MainWindow", "Buscar Coletor"))
        item = self.table_banco_lancamento.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.table_banco_lancamento.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.table_banco_lancamento.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.table_banco_lancamento.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.table_banco_lancamento.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.table_banco_lancamento.verticalHeaderItem(5)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.table_banco_lancamento.verticalHeaderItem(6)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.table_banco_lancamento.verticalHeaderItem(7)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.table_banco_lancamento.verticalHeaderItem(8)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.table_banco_lancamento.verticalHeaderItem(9)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.table_banco_lancamento.verticalHeaderItem(10)
        item.setText(_translate("MainWindow", "New Row"))

        item = self.table_banco_lancamento.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Id"))
        item = self.table_banco_lancamento.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Nome"))
        item = self.table_banco_lancamento.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Matrícula"))
        item = self.table_banco_lancamento.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Coletor"))
        item = self.table_banco_lancamento.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Data Retirada"))
        item = self.table_banco_lancamento.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Hora Retirada"))
        item = self.table_banco_lancamento.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "Data Devolução"))
        item = self.table_banco_lancamento.horizontalHeaderItem(7)
        item.setText(_translate("MainWindow", "Hora Devolução"))
        item = self.table_banco_lancamento.horizontalHeaderItem(8)
        item.setText(_translate("MainWindow", "Série Coletor"))
        item = self.table_banco_lancamento.horizontalHeaderItem(9)
        item.setText(_translate("MainWindow", "Setor"))
        item = self.table_banco_lancamento.horizontalHeaderItem(10)
        item.setText(_translate("MainWindow", "Liberado?"))
        item = self.table_banco_lancamento.horizontalHeaderItem(11)
        item.setText(_translate("MainWindow", "Turno"))

        self.label.setText(_translate(
            "MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:12pt; font-weight:600; color:#dadada;\">Banco de Dados</span></p></body></html>"))
        self.version_2.setText(_translate(
            "MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:10pt; font-weight:600; color:#aaaaaa;\">Lançamentos</span></p></body></html>"))
        self.btn_excluir_dados.setText(_translate("MainWindow", "Excluir"))
        self.btn_editar_dados.setText(_translate("MainWindow", "Editar"))
        self.creditsLabel.setText(_translate(
            "MainWindow", "<html><head/><body><p><span style=\" color:#aaaaaa;\">By : Sérgio Felipe | José Claudio </span></p></body></html>"))
        self.version.setText(_translate(
            "MainWindow", "<html><head/><body><p><span style=\" color:#aaaaaa;\"></span></p></body></html>"))

        # Botões Adicionados - Funções

        self.btn_adicionar_coletor.clicked.connect(self.add_coletor)
        self.btn_editar_coletor.clicked.connect(self.atualizar_coletores)
        self.carregadados_coletores()
        self.table_coletor.itemSelectionChanged.connect(
            self.preencher_coletores)
        self.btn_excluir_coletor.clicked.connect(self.deletar_coletor)

        # Botão Pagina Colaborador

        self.btn_adicionar_colaborador.clicked.connect(self.add)
        self.btn_excluir_colaborador.clicked.connect(self.deletar_colaborador)
        self.btn_editar_colaborador.clicked.connect(
            self.atualizar_colaboradores)
        self.carregadados_colaboradores()
        self.table_colaboradores.itemSelectionChanged.connect(
            self.preencher_colaboradores)

        # Evento Enter Pagina Inicial

        self.lineEdit_matricula.returnPressed.connect(
            self.buscar_matricula_inicio)
        self.lineEdit_coletor.returnPressed.connect(self.buscar_coletor_inicio)

        # Painel Principal

        self.btn_entrada.clicked.connect(self.add_lancamento_retirada)
        self.btn_saida.clicked.connect(self.add_lancamento_devolucao)
        # self.btn_pesquisar.clicked.connect(self.carregadados_lancamentos)
        self.btn_pesquisar.clicked.connect(self.Pesquisar)
        self.btn_excluir_dados.clicked.connect(self.deletar_lancamento)
        # self.carregadados_lancamentos()
        self.procv_tabela()

        # AQUIIIIIIII
        self.consultar_ativo()
        self.consultar_desativado()
        self.Pesquisar()

        # Tamanho das Colunas - Tabela Lancamentos

        self.table_banco_lancamento.setColumnWidth(0, 50)  # Id
        self.table_banco_lancamento.setColumnWidth(1, 300)  # Nome
        self.table_banco_lancamento.setColumnWidth(2, 90)  # Matricula
        self.table_banco_lancamento.setColumnWidth(3, 80)  # Coletor
        self.table_banco_lancamento.setColumnWidth(4, 100)  # Data Retirada
        self.table_banco_lancamento.setColumnWidth(5, 100)  # Hora Retirada
        self.table_banco_lancamento.setColumnWidth(6, 100)  # Data Devolução
        self.table_banco_lancamento.setColumnWidth(7, 100)  # Hora Devolução
        self.table_banco_lancamento.setColumnWidth(8, 150)  # Serie do Coletor
        self.table_banco_lancamento.setColumnWidth(9, 110)  # Setor Colaborador
        self.table_banco_lancamento.setColumnWidth(10, 80)  # Status Liberado

   # Tamanho das Colunas - Tabela Colaboradores

        self.table_colaboradores.setColumnWidth(0, 100)  # Id
        self.table_colaboradores.setColumnWidth(1, 335)  # Nome
        self.table_colaboradores.setColumnWidth(2, 150)  # Matricula
        self.table_colaboradores.setColumnWidth(3, 200)  # Setor
        self.table_colaboradores.setColumnWidth(4, 155)  # Turno
        self.table_colaboradores.setColumnWidth(5, 155)  # Status

   # Tamanho das Colunas - Tabela Coletores

        self.table_coletor.setColumnWidth(0, 130)  # Id
        self.table_coletor.setColumnWidth(1, 290)  # Serial Coletor
        self.table_coletor.setColumnWidth(2, 220)  # Coletor
        self.table_coletor.setColumnWidth(3, 230)  # Modelo
        self.table_coletor.setColumnWidth(4, 220)  # Status

        self.lineEdit_buscar_matricula.returnPressed.connect(
            self.btn_pesquisar.click)
        # Esse botaão siginifca o enter, na busca avançada.
        #       22/06/2022  - Atualização.


# ***********************************************************************************************************


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
